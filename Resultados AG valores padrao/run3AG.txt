tp, tour, tr, numberIterations, tm, isNumpy 10 2 80 10 20 True
isNumpy True
Load dataset
Lidando com numpy data
shuffleSeed 1
n_epochs 30 max_epochs_stop 10
device =  cpu

PrepareDataFromNumpy arrays
getFilesName
Imagens_numpy_array_allData_entireDatabase_MinMax_extrapolandoLimites
readFilesByPatient saudaveis
readFilesByPatient doentes

Split Healthy Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0189', 'T0196', 'T0193', 'T0220', 'T0199', 'T0217', 'T0188', 'T0224', 'T0216', 'T0211', 'T0259', 'T0194', 'T0200', 'T0239', 'T0236', 'T0272', 'T0201', 'T0226', 'T0195', 'T0221', 'T0238', 'T0237', 'T0234', 'T0275', 'T0222', 'T0261']
validationPatients ['T0243', 'T0276', 'T0191', 'T0219', 'T0244', 'T0212']
testPatients ['T0218', 'T0233', 'T0208', 'T0190', 'T0225', 'T0177']
imagens do trainDataset 128
imagens do testDataset 30
imagens do validationDataset 30
train (128, 3, 224, 224)
test (30, 3, 224, 224)
validation (30, 3, 224, 224)

Split Cancer Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0267', 'T0255', 'T0138', 'T0286', 'T0198', 'T0246', 'T0192', 'T0258', 'T0202', 'T0209', 'T0241', 'T0179', 'T0287', 'T0213', 'T0203', 'T0210', 'T0240', 'T0270', 'T0180', 'T0264', 'T0269', 'T0282', 'T0281', 'T0277', 'T0273', 'T0256']
validationPatients ['T0266', 'T0245', 'T0263', 'T0260', 'T0181', 'T0204']
testPatients ['T0257', 'T0278', 'T0285', 'T0268', 'T0283', 'T0271']
imagens do trainDataset 129
imagens do testDataset 29
imagens do validationDataset 30
train (129, 3, 224, 224)
test (29, 3, 224, 224)
validation (30, 3, 224, 224)

Total de dados para treinamento 257

Total de dados para teste 59

Total de dados para validacao 60
prepareNumpyDatasetBalancedData
Sem aumento de dados
com testValidationTransform Compose(
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
   category  Treinamento  Validação  Teste
0  Saudável          128         30     30
1    Doente          129         30     29


@@@@ Init pop


@@@@ Calculando fitness

Best epoch: 19 with loss: 0.69 and acc: 50.00%
3865.51 total seconds elapsed. 193.28 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6932524220418121

Best epoch: 1 with loss: 0.69 and acc: 43.33%
3856.63 total seconds elapsed. 192.83 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.862069             0.766667      0.819672
TestLoader Losses 0.5897719799462011

Best epoch: 0 with loss: 0.69 and acc: 41.67%
2596.85 total seconds elapsed. 129.84 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.576271            0.241379                  0.9      0.358974
TestLoader Losses 0.68721199338719

Best epoch: 0 with loss: 0.69 and acc: 46.67%
7612.72 total seconds elapsed. 152.25 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.862069                  0.8      0.833333
TestLoader Losses 0.41321189120664437

Best epoch: 14 with loss: 0.69 and acc: 48.33%
7622.41 total seconds elapsed. 152.45 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.689655             0.866667      0.754717
TestLoader Losses 0.5604408989518376

Best epoch: 5 with loss: 0.70 and acc: 28.33%
3940.92 total seconds elapsed. 197.05 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.661017            0.655172             0.666667      0.655172
TestLoader Losses 0.6760465876530792

Best epoch: 32 with loss: 0.69 and acc: 50.00%
7621.15 total seconds elapsed. 152.42 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.7159980141510398

Best epoch: 9 with loss: 0.69 and acc: 50.00%
2042.43 total seconds elapsed. 204.24 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6931467096684343

Best epoch: 1 with loss: 0.74 and acc: 48.33%
6689.53 total seconds elapsed. 133.79 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.896552             0.666667           0.8
TestLoader Losses 0.651851377118442

Best epoch: 9 with loss: 0.69 and acc: 50.00%
8431.87 total seconds elapsed. 140.53 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.7044417029720241


 $$$$$$$$ Geração  0
population =  [[list([5]) list([2]) list([1, 10]) list([1, 0.022914829373226198])
  list([0, 12]) list([0, 0.26005381632171437]) list([1, 3])
  list([0, 0.3481852889628508]) list([0, 4])
  list([0, 0.48080028399392627]) list([0, 5])
  list([1, 0.47386593674929056])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([2]) list([1]) list([1, 12]) list([1, 0.2741675885670038])
  list([1, 12]) list([0, 0.28715232978949135]) list([0, 4])
  list([0, 0.3857402886966989]) list([1, 12])
  list([0, 0.36570776625961293]) list([1, 7])
  list([0, 0.3761459310812804])]
 [list([1]) list([5]) list([0, 10]) list([1, 0.13382194139552353])
  list([0, 9]) list([1, 0.2787373154104323]) list([1, 6])
  list([0, 0.5973473994538754]) list([1, 9])
  list([0, 0.40447743863913815]) list([1, 7])
  list([0, 0.2978231163845114])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.07185859819369877])
  list([1, 8]) list([1, 0.4194095763420362]) list([1, 9])
  list([1, 0.11252870808150774]) list([1, 9])
  list([1, 0.05612992701158197]) list([1, 5])
  list([0, 0.4239819546826839])]
 [list([3]) list([2]) list([0, 11]) list([1, 0.4904949679482778])
  list([0, 11]) list([0, 0.08733122732197736]) list([0, 10])
  list([1, 0.5472655537495793]) list([1, 5]) list([1, 0.461599665940001])
  list([1, 5]) list([1, 0.1094173949043967])]
 [list([6]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([1, 0.3734579084249735]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([1]) list([6]) list([1, 10]) list([0, 0.226970197210214])
  list([1, 8]) list([1, 0.2916005978951296]) list([0, 4])
  list([1, 0.401364556207289]) list([1, 8]) list([1, 0.3727459961279432])
  list([1, 10]) list([1, 0.08018317454010375])]
 [list([4]) list([5]) list([0, 11]) list([1, 0.31374293858794405])
  list([1, 3]) list([0, 0.5911466736835544]) list([1, 12])
  list([1, 0.04439174738624494]) list([0, 7])
  list([0, 0.32213244252665624]) list([1, 12])
  list([0, 0.4400280759787167])]
 [list([6]) list([2]) list([1, 6]) list([1, 0.47188413971455173])
  list([0, 6]) list([0, 0.5204695190907063]) list([0, 4])
  list([0, 0.21701635530866167]) list([1, 7])
  list([1, 0.2841145421462355]) list([0, 10])
  list([0, 0.38987871737912483])]]
populationFitness =  [0.81355932 0.83050847 0.50847458 0.49152542 0.77966102 0.50847458
 0.66101695 0.49152542 0.77966102 0.57627119]
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

Best epoch: 11 with loss: 0.69 and acc: 50.00%
3827.75 total seconds elapsed. 191.39 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6929434153993251

achei cache 0.6610169491525424  individuo =  9 [list([6]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
 list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
 list([0, 0.5823345607040528]) list([0, 5]) list([1, 0.3734579084249735])
 list([1, 10]) list([0, 0.3052554778908623])] 
 fitness =  0.6610169491525424

Best epoch: 3 with loss: 0.69 and acc: 43.33%
3830.74 total seconds elapsed. 191.54 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.793103                  0.7      0.754098
TestLoader Losses 0.6460428591501914

Best epoch: 1 with loss: 0.69 and acc: 50.00%
3836.06 total seconds elapsed. 191.80 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.931034             0.566667      0.782609
TestLoader Losses 0.5604546302455967

Best epoch: 0 with loss: 0.69 and acc: 50.00%
3892.99 total seconds elapsed. 194.65 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6927640700744371

Best epoch: 0 with loss: 0.70 and acc: 43.33%
3903.73 total seconds elapsed. 195.19 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.793103                  0.8      0.793103
TestLoader Losses 0.4766084647784799

Best epoch: 4 with loss: 0.69 and acc: 50.00%
6282.87 total seconds elapsed. 125.66 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.793103                  0.8      0.793103
TestLoader Losses 0.4831751645621607

Best epoch: 0 with loss: 0.69 and acc: 45.00%
6286.85 total seconds elapsed. 125.74 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.827586             0.766667           0.8
TestLoader Losses 0.5681565242298579

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 0 with loss: 0.69 and acc: 41.67%
6493.15 total seconds elapsed. 129.86 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.610169            0.586207             0.633333      0.596491
TestLoader Losses 0.6580310372982995


@@@@ Reinsercao


 $$$$$$$$ Geração  1
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.3734579084249735]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.07185859819369877])
  list([1, 8]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.3734579084249735]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 12]) list([0, 0.26005381632171437]) list([1, 3])
  list([0, 0.3481852889628508]) list([0, 4])
  list([0, 0.48080028399392627]) list([0, 5])
  list([1, 0.47386593674929056])]
 [list([5]) list([2]) list([1, 10]) list([1, 0.022914829373226198])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([4]) list([2]) list([1, 6]) list([1, 0.47188413971455173])
  list([0, 6]) list([0, 0.5204695190907063]) list([0, 4])
  list([0, 0.21701635530866167]) list([1, 7])
  list([1, 0.2841145421462355]) list([0, 10])
  list([0, 0.38987871737912483])]
 [list([6]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([1, 0.3734579084249735]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([6]) list([5]) list([0, 11]) list([1, 0.31374293858794405])
  list([1, 3]) list([0, 0.5911466736835544]) list([1, 12])
  list([1, 0.04439174738624494]) list([0, 7])
  list([0, 0.32213244252665624]) list([1, 12])
  list([0, 0.4400280759787167])]
 [list([6]) list([2]) list([0, 11]) list([1, 0.4904949679482778])
  list([0, 11]) list([0, 0.08733122732197736]) list([1, 10])
  list([1, 0.5472655537495793]) list([1, 5]) list([1, 0.461599665940001])
  list([1, 5]) list([1, 0.1094173949043967])]]
populationFitness =  [0.83050847 0.83050847 0.79661017 0.79661017 0.79661017 0.74576271
 0.74576271 0.66101695 0.61016949 0.50847458]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 3 with loss: 0.70 and acc: 38.33%
3586.30 total seconds elapsed. 179.31 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.551724             0.733333      0.603774
TestLoader Losses 0.6668109055292808

Best epoch: 3 with loss: 0.69 and acc: 50.00%
3582.48 total seconds elapsed. 179.12 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6893018777087584

achei cache 0.7966101694915254  individuo =  0 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
 list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
 list([0, 0.5823345607040528]) list([0, 5]) list([0, 0.2110870663417304])
 list([1, 10]) list([0, 0.3052554778908623])] 
 fitness =  0.7966101694915254

Best epoch: 34 with loss: 0.69 and acc: 50.00%
6612.58 total seconds elapsed. 132.25 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6936019406480304

Best epoch: 3 with loss: 0.69 and acc: 45.00%
6600.48 total seconds elapsed. 132.01 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.724138             0.866667      0.777778
TestLoader Losses 0.5742050166857444

Best epoch: 0 with loss: 0.72 and acc: 46.67%
6621.47 total seconds elapsed. 132.43 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.827586             0.766667           0.8
TestLoader Losses 0.4576785185579526

Best epoch: 0 with loss: 0.70 and acc: 46.67%
6796.04 total seconds elapsed. 135.92 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.694915            0.965517             0.433333      0.756757
TestLoader Losses 0.5133839052612499

Best epoch: 1 with loss: 0.80 and acc: 46.67%
3630.19 total seconds elapsed. 181.51 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.4467688682725874

Best epoch: 0 with loss: 0.69 and acc: 45.00%
3591.99 total seconds elapsed. 179.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.694915            0.724138             0.666667           0.7
TestLoader Losses 0.6785893743321046


@@@@ Reinsercao


 $$$$$$$$ Geração  2
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.2110870663417304]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 4])
  list([0, 0.21701635530866167]) list([1, 7])
  list([1, 0.2841145421462355]) list([0, 10])
  list([0, 0.38987871737912483])]
 [list([5]) list([5]) list([1, 10]) list([1, 0.022914829373226198])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([1, 0.3734579084249735]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([5]) list([2]) list([1, 5]) list([0, 0.07185859819369877])
  list([1, 8]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.3734579084249735]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([4]) list([2]) list([1, 6]) list([1, 0.47188413971455173])
  list([0, 6]) list([0, 0.5204695190907063]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([6]) list([2]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 12]) list([0, 0.26005381632171437]) list([1, 3])
  list([0, 0.3481852889628508]) list([0, 4])
  list([0, 0.48080028399392627]) list([0, 5])
  list([1, 0.47386593674929056])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.79661017 0.79661017 0.79661017
 0.69491525 0.69491525 0.6440678  0.49152542]

multiplos individiduos com maxValue =  3
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

Best epoch: 0 with loss: 0.69 and acc: 46.67%
1908.90 total seconds elapsed. 95.44 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.655172             0.866667      0.730769
TestLoader Losses 0.49143360075304066

Best epoch: 25 with loss: 0.69 and acc: 50.00%
3929.74 total seconds elapsed. 78.59 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6930330294673726

achei cache 0.8305084745762712  individuo =  1 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
 list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
 list([0, 0.5823345607040528]) list([0, 5]) list([0, 0.2110870663417304])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  9 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.6949152542372882  individuo =  7 [list([3]) list([5]) list([1, 12]) list([1, 0.47305918070963143])
 list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
 list([0, 0.5823345607040528]) list([0, 5]) list([0, 0.2110870663417304])
 list([1, 10]) list([0, 0.3052554778908623])] 
 fitness =  0.6949152542372882

Best epoch: 0 with loss: 0.73 and acc: 40.00%
3928.89 total seconds elapsed. 78.58 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.661017            0.344828             0.966667           0.5
TestLoader Losses 0.6399553539389271

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7966101694915254  individuo =  0 [list([5]) list([5]) list([1, 10]) list([1, 0.022914829373226198])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.7966101694915254

Best epoch: 15 with loss: 0.69 and acc: 50.00%
1941.46 total seconds elapsed. 97.07 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6932551254660396

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712


@@@@ Reinsercao


 $$$$$$$$ Geração  3
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.2110870663417304]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([5]) list([5]) list([1, 10]) list([1, 0.022914829373226198])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.2110870663417304]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([3]) list([5]) list([0, 8]) list([0, 0.031059847427846798])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.2110870663417304]) list([1, 10])
  list([0, 0.3052554778908623])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 10])
  list([0, 0.3052554778908623])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.79661017
 0.76271186 0.69491525 0.66101695 0.50847458]

multiplos individiduos com maxValue =  5
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.7627118644067796  individuo =  3 [list([3]) list([2]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  0 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 0 with loss: 0.70 and acc: 48.33%
3218.73 total seconds elapsed. 64.37 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.965517             0.533333      0.788732
TestLoader Losses 0.5643101496211553

achei cache 0.8305084745762712  individuo =  6 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  7 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  2 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7627118644067796  individuo =  1 [list([3]) list([2]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([0, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
 list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
 list([0, 0.5823345607040528]) list([0, 5]) list([0, 0.2110870663417304])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  9 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712


@@@@ Reinsercao


 $$$$$$$$ Geração  4
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([1, 12]) list([1, 0.47305918070963143])
  list([0, 5]) list([1, 0.5668266384200207]) list([0, 12])
  list([0, 0.5823345607040528]) list([0, 5])
  list([0, 0.2110870663417304]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([0, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([2]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.76271186 0.76271186]

multiplos individiduos com maxValue =  8
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  3 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  1 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  2 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 19 with loss: 0.69 and acc: 50.00%
3172.34 total seconds elapsed. 63.45 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6932922945184222

Best epoch: 2 with loss: 0.70 and acc: 43.33%
3173.31 total seconds elapsed. 63.47 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.793103             0.833333      0.807018
TestLoader Losses 0.4643967101129435

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  6 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  7 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712


@@@@ Reinsercao


 $$$$$$$$ Geração  5
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([4]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.83050847 0.81355932]

multiplos individiduos com maxValue =  9
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  3 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 2 with loss: 0.70 and acc: 40.00%
5123.31 total seconds elapsed. 102.47 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.862069             0.666667       0.78125
TestLoader Losses 0.5239087757417711

achei cache 0.8305084745762712  individuo =  6 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 2 with loss: 0.70 and acc: 40.00%
5130.11 total seconds elapsed. 102.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.862069             0.666667       0.78125
TestLoader Losses 0.5239087757417711

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 2 with loss: 0.70 and acc: 40.00%
5128.71 total seconds elapsed. 102.57 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.862069             0.666667       0.78125
TestLoader Losses 0.5239087757417711

Best epoch: 2 with loss: 0.70 and acc: 40.00%
5131.02 total seconds elapsed. 102.62 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.862069             0.666667       0.78125
TestLoader Losses 0.5239087757417711

Best epoch: 2 with loss: 0.70 and acc: 40.00%
5138.14 total seconds elapsed. 102.76 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.862069             0.666667       0.78125
TestLoader Losses 0.5239087757417711


@@@@ Reinsercao


 $$$$$$$$ Geração  6
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.76271186 0.76271186 0.76271186 0.76271186]

multiplos individiduos com maxValue =  6
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  1 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7627118644067796  individuo =  0 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.40394481145354805]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 18 with loss: 0.69 and acc: 50.00%
2967.25 total seconds elapsed. 59.35 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6955554768190546

achei cache 0.7627118644067796  individuo =  2 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  9 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7627118644067796  individuo =  3 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  7 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712


@@@@ Reinsercao


 $$$$$$$$ Geração  7
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.40394481145354805]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.76271186 0.76271186 0.76271186]

multiplos individiduos com maxValue =  7
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  2 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([0, 0.40394481145354805]) list([0, 12])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  3 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  6 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  1 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 39 with loss: 0.69 and acc: 50.00%
3066.61 total seconds elapsed. 61.33 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.693236898567717

achei cache 0.8305084745762712  individuo =  0 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7627118644067796  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  7 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7627118644067796  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796


@@@@ Reinsercao


 $$$$$$$$ Geração  8
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([0, 0.40394481145354805]) list([0, 12])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.76271186 0.76271186]

multiplos individiduos com maxValue =  8
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  0 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  2 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  9 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 4 with loss: 0.71 and acc: 45.00%
3578.99 total seconds elapsed. 71.58 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.931034                  0.7      0.830769
TestLoader Losses 0.46349140951188944

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7966101694915254  individuo =  6 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([0, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.7966101694915254

Best epoch: 4 with loss: 0.71 and acc: 45.00%
3577.82 total seconds elapsed. 71.56 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.931034                  0.7      0.830769
TestLoader Losses 0.46349140951188944

achei cache 0.7627118644067796  individuo =  7 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712


@@@@ Reinsercao


 $$$$$$$$ Geração  9
population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([1, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([1, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([0, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.81355932 0.81355932 0.79661017]

multiplos individiduos com maxValue =  7
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  3 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  1 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.3419017851535146]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  8 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  4 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  5 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

Best epoch: 49 with loss: 0.69 and acc: 51.67%
3037.38 total seconds elapsed. 60.75 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.525424                 1.0             0.066667      0.674419
TestLoader Losses 0.68254623372676

achei cache 0.8305084745762712  individuo =  6 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.3419017851535146]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  2 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  9 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
 list([1, 0.44260699889735666]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 3]) list([0, 0.19365619507583431])] 
 fitness =  0.8305084745762712

achei cache 0.7627118644067796  individuo =  7 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 
 fitness =  0.7627118644067796


@@@@ Reinsercao

Final population

population =  [[list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.3419017851535146]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.3419017851535146]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 12])
  list([1, 0.44260699889735666]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 3])
  list([0, 0.19365619507583431])]
 [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
  list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
  list([1, 0.08482647372215753]) list([1, 5])
  list([1, 0.2832445548301717]) list([1, 6])
  list([0, 0.19365619507583431])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.83050847 0.76271186]

multiplos individiduos com maxValue =  9
bestParent, bestParentFitness [list([3]) list([5]) list([0, 8]) list([1, 0.031059847427846798])
 list([0, 3]) list([1, 0.4601253068765954]) list([0, 10])
 list([1, 0.08482647372215753]) list([1, 5]) list([1, 0.2832445548301717])
 list([1, 6]) list([0, 0.19365619507583431])] 0.8305084745762712
