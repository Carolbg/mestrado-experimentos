tp, tour, tr, numberIterations, tm, isNumpy 10 2 80 10 20 True
isNumpy True
Load dataset
Lidando com numpy data
shuffleSeed 1
n_epochs 30 max_epochs_stop 10
device =  cpu

PrepareDataFromNumpy arrays
getFilesName
Imagens_numpy_array_allData_entireDatabase_MinMax_extrapolandoLimites
readFilesByPatient saudaveis
readFilesByPatient doentes

Split Healthy Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0189', 'T0196', 'T0193', 'T0220', 'T0199', 'T0217', 'T0188', 'T0224', 'T0216', 'T0211', 'T0259', 'T0194', 'T0200', 'T0239', 'T0236', 'T0272', 'T0201', 'T0226', 'T0195', 'T0221', 'T0238', 'T0237', 'T0234', 'T0275', 'T0222', 'T0261']
validationPatients ['T0243', 'T0276', 'T0191', 'T0219', 'T0244', 'T0212']
testPatients ['T0218', 'T0233', 'T0208', 'T0190', 'T0225', 'T0177']
imagens do trainDataset 128
imagens do testDataset 30
imagens do validationDataset 30
train (128, 3, 224, 224)
test (30, 3, 224, 224)
validation (30, 3, 224, 224)

Split Cancer Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0267', 'T0255', 'T0138', 'T0286', 'T0198', 'T0246', 'T0192', 'T0258', 'T0202', 'T0209', 'T0241', 'T0179', 'T0287', 'T0213', 'T0203', 'T0210', 'T0240', 'T0270', 'T0180', 'T0264', 'T0269', 'T0282', 'T0281', 'T0277', 'T0273', 'T0256']
validationPatients ['T0266', 'T0245', 'T0263', 'T0260', 'T0181', 'T0204']
testPatients ['T0257', 'T0278', 'T0285', 'T0268', 'T0283', 'T0271']
imagens do trainDataset 129
imagens do testDataset 29
imagens do validationDataset 30
train (129, 3, 224, 224)
test (29, 3, 224, 224)
validation (30, 3, 224, 224)

Total de dados para treinamento 257

Total de dados para teste 59

Total de dados para validacao 60
prepareNumpyDatasetBalancedData
Sem aumento de dados
com testValidationTransform Compose(
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
   category  Treinamento  Validação  Teste
0  Saudável          128         30     30
1    Doente          129         30     29


@@@@ Init pop
value =  2
value =  3
value =  5
value =  4
value =  5
value =  1
value =  3
value =  3
value =  2
value =  6
value =  4
value =  4
value =  1
value =  5
value =  4
value =  3
value =  1
value =  2
value =  5
value =  6


@@@@ Calculando fitness
verifyEntry ([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=32, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.13165930168768783, inplace=False)
  (5): Linear(in_features=32, out_features=128, bias=True)
  (6): ReLU()
  (7): Linear(in_features=128, out_features=32, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.031223563990194325, inplace=False)
  (10): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 35 with loss: 0.69 and acc: 50.00%
12983.10 total seconds elapsed. 216.39 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6931620048264325
@@@@ individuo =  4 [list([2]) list([6]) list([1, 10]) list([0, 0.4628538155890789])
 list([1, 5]) list([1, 0.13165930168768783]) list([1, 7])
 list([0, 0.2565105114066311]) list([0, 5]) list([0, 0.4249838212381123])
 list([1, 5]) list([1, 0.031223563990194325])] 
 fitness =  0.4915254237288136
verifyEntry ([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=64, bias=True)
  (1): ReLU()
  (2): Linear(in_features=64, out_features=16, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.4612340823084866, inplace=False)
  (5): Linear(in_features=16, out_features=1024, bias=True)
  (6): ReLU()
  (7): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 43.33%
9543.00 total seconds elapsed. 238.58 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.827586                  0.7      0.774194
TestLoader Losses 0.46486625833026435
@@@@ individuo =  5 [list([4]) list([4]) list([0, 9]) list([1, 0.1316026430944374])
 list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([0, 0.39659896345628654])] 
 fitness =  0.7627118644067796
verifyEntry ([4], [3], [1, 8])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=256, bias=True)
  (1): ReLU()
  (2): Linear(in_features=256, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.71 and acc: 45.00%
7434.95 total seconds elapsed. 247.83 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712             0.62069                  0.9          0.72
TestLoader Losses 0.46191273149797474
@@@@ individuo =  7 [list([4]) list([3]) list([0, 9]) list([1, 0.2198842028084606])
 list([0, 11]) list([1, 0.026889096111542953]) list([1, 8])
 list([0, 0.15115261453712248]) list([0, 12])
 list([1, 0.34160711596277044]) list([0, 4])
 list([1, 0.05849248252510224])] 
 fitness =  0.7627118644067796
verifyEntry ([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=16, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.3632860173888613, inplace=False)
  (7): Linear(in_features=16, out_features=2, bias=True)
)

Best epoch: 9 with loss: 0.69 and acc: 50.00%
11564.04 total seconds elapsed. 231.28 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6936564667750214
@@@@ individuo =  6 [list([1]) list([5]) list([1, 10]) list([0, 0.5198213166242635])
 list([1, 5]) list([0, 0.20487647635744802]) list([0, 6])
 list([1, 0.06136812186167977]) list([1, 4]) list([1, 0.3632860173888613])
 list([0, 6]) list([1, 0.5836406866925204])] 
 fitness =  0.5084745762711864
verifyEntry ([5], [1], [1, 3])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=8, bias=True)
  (1): ReLU()
  (2): Linear(in_features=8, out_features=2, bias=True)
)

Best epoch: 2 with loss: 0.69 and acc: 40.00%
2212.12 total seconds elapsed. 221.21 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.448276             0.833333      0.553191
TestLoader Losses 0.6822012612375162
@@@@ individuo =  2 [list([5]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
 list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
 list([0, 0.46189203936518713]) list([0, 9]) list([1, 0.513092130356105])
 list([0, 5]) list([0, 0.3081073748183189])] 
 fitness =  0.6440677966101694
verifyEntry ([1], [2], [1, 6], [1, 6])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=64, bias=True)
  (1): ReLU()
  (2): Linear(in_features=64, out_features=64, bias=True)
  (3): ReLU()
  (4): Linear(in_features=64, out_features=2, bias=True)
)

Best epoch: 7 with loss: 0.69 and acc: 50.00%
5209.00 total seconds elapsed. 260.45 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.7045969811536498
@@@@ individuo =  8 [list([1]) list([2]) list([0, 12]) list([1, 0.4182715622480021])
 list([0, 10]) list([0, 0.5959958034122956]) list([0, 11])
 list([1, 0.19246754057189475]) list([1, 6]) list([0, 0.2993606380247218])
 list([1, 6]) list([0, 0.13281096878473833])] 
 fitness =  0.5084745762711864
verifyEntry ([5], [4], [1, 10], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
9510.30 total seconds elapsed. 237.76 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.793103             0.766667      0.779661
TestLoader Losses 0.5153896985417705
@@@@ individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=8, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.4113958157040268, inplace=False)
  (5): Linear(in_features=8, out_features=2048, bias=True)
  (6): ReLU()
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 5 with loss: 0.69 and acc: 50.00%
7403.64 total seconds elapsed. 246.79 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6931197511947761
@@@@ individuo =  0 [list([2]) list([3]) list([1, 9]) list([0, 0.29029527357160145])
 list([1, 3]) list([1, 0.4113958157040268]) list([0, 12])
 list([1, 0.039698667190215954]) list([0, 4])
 list([1, 0.021433007128014037]) list([1, 11])
 list([0, 0.4057451424815068])] 
 fitness =  0.5084745762711864
verifyEntry ([5], [6], [1, 9])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 45.00%
7606.60 total seconds elapsed. 126.78 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.5057050292774782
@@@@ individuo =  9 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])] 
 fitness =  0.7796610169491526
verifyEntry ([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5393079914179616, inplace=False)
  (7): Linear(in_features=2048, out_features=512, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.054754455415959864, inplace=False)
  (10): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 45.00%
7497.97 total seconds elapsed. 249.93 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.793103                  0.8      0.793103
TestLoader Losses 0.4704011294801356
@@@@ individuo =  3 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9])
 list([1, 0.054754455415959864])] 
 fitness =  0.7966101694915254
result (0, 0.5084745762711864)
result (1, 0.7796610169491526)
result (2, 0.6440677966101694)
result (3, 0.7966101694915254)
result (4, 0.4915254237288136)
result (5, 0.7627118644067796)
result (6, 0.5084745762711864)
result (7, 0.7627118644067796)
result (8, 0.5084745762711864)
result (9, 0.7796610169491526)

individuo [list([2]) list([3]) list([1, 9]) list([0, 0.29029527357160145])
 list([1, 3]) list([1, 0.4113958157040268]) list([0, 12])
 list([1, 0.039698667190215954]) list([0, 4])
 list([1, 0.021433007128014037]) list([1, 11])
 list([0, 0.4057451424815068])]  key  ([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 


individuo [list([5]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
 list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
 list([0, 0.46189203936518713]) list([0, 9]) list([1, 0.513092130356105])
 list([0, 5]) list([0, 0.3081073748183189])]  key  ([5], [1], [1, 3]) 


individuo [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9])
 list([1, 0.054754455415959864])]  key  ([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864]) 


individuo [list([2]) list([6]) list([1, 10]) list([0, 0.4628538155890789])
 list([1, 5]) list([1, 0.13165930168768783]) list([1, 7])
 list([0, 0.2565105114066311]) list([0, 5]) list([0, 0.4249838212381123])
 list([1, 5]) list([1, 0.031223563990194325])]  key  ([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325]) 


individuo [list([4]) list([4]) list([0, 9]) list([1, 0.1316026430944374])
 list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([0, 0.39659896345628654])]  key  ([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10]) 


individuo [list([1]) list([5]) list([1, 10]) list([0, 0.5198213166242635])
 list([1, 5]) list([0, 0.20487647635744802]) list([0, 6])
 list([1, 0.06136812186167977]) list([1, 4]) list([1, 0.3632860173888613])
 list([0, 6]) list([1, 0.5836406866925204])]  key  ([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613]) 


individuo [list([4]) list([3]) list([0, 9]) list([1, 0.2198842028084606])
 list([0, 11]) list([1, 0.026889096111542953]) list([1, 8])
 list([0, 0.15115261453712248]) list([0, 12])
 list([1, 0.34160711596277044]) list([0, 4])
 list([1, 0.05849248252510224])]  key  ([4], [3], [1, 8]) 


individuo [list([1]) list([2]) list([0, 12]) list([1, 0.4182715622480021])
 list([0, 10]) list([0, 0.5959958034122956]) list([0, 11])
 list([1, 0.19246754057189475]) list([1, 6]) list([0, 0.2993606380247218])
 list([1, 6]) list([0, 0.13281096878473833])]  key  ([1], [2], [1, 6], [1, 6]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])]  key  ([5], [6], [1, 9]) 


cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526}


 $$$$$$$$ Geração  0
population =  [[list([2]) list([3]) list([1, 9]) list([0, 0.29029527357160145])
  list([1, 3]) list([1, 0.4113958157040268]) list([0, 12])
  list([1, 0.039698667190215954]) list([0, 4])
  list([1, 0.021433007128014037]) list([1, 11])
  list([0, 0.4057451424815068])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
  list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
  list([0, 0.46189203936518713]) list([0, 9])
  list([1, 0.513092130356105]) list([0, 5]) list([0, 0.3081073748183189])]
 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.054754455415959864])]
 [list([2]) list([6]) list([1, 10]) list([0, 0.4628538155890789])
  list([1, 5]) list([1, 0.13165930168768783]) list([1, 7])
  list([0, 0.2565105114066311]) list([0, 5])
  list([0, 0.4249838212381123]) list([1, 5])
  list([1, 0.031223563990194325])]
 [list([4]) list([4]) list([0, 9]) list([1, 0.1316026430944374])
  list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
  list([1, 0.4612340823084866]) list([0, 10])
  list([1, 0.10140884580920874]) list([1, 10])
  list([0, 0.39659896345628654])]
 [list([1]) list([5]) list([1, 10]) list([0, 0.5198213166242635])
  list([1, 5]) list([0, 0.20487647635744802]) list([0, 6])
  list([1, 0.06136812186167977]) list([1, 4])
  list([1, 0.3632860173888613]) list([0, 6])
  list([1, 0.5836406866925204])]
 [list([4]) list([3]) list([0, 9]) list([1, 0.2198842028084606])
  list([0, 11]) list([1, 0.026889096111542953]) list([1, 8])
  list([0, 0.15115261453712248]) list([0, 12])
  list([1, 0.34160711596277044]) list([0, 4])
  list([1, 0.05849248252510224])]
 [list([1]) list([2]) list([0, 12]) list([1, 0.4182715622480021])
  list([0, 10]) list([0, 0.5959958034122956]) list([0, 11])
  list([1, 0.19246754057189475]) list([1, 6])
  list([0, 0.2993606380247218]) list([1, 6])
  list([0, 0.13281096878473833])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([0, 11])
  list([0, 0.5882144812345669])]]
populationFitness =  [0.50847458 0.77966102 0.6440678  0.79661017 0.49152542 0.76271186
 0.50847458 0.76271186 0.50847458 0.77966102]
bestParent, bestParentFitness [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9])
 list([1, 0.054754455415959864])] 0.7966101694915254


@@@@ Selecao
indexParent 9
indexParent 5
indexParent 9
indexParent 2
indexParent 2
indexParent 8
indexParent 9
indexParent 1
indexParent 1
indexParent 1


@@@@ Crossover
crossoverPoint 2
not changing individuals
crossoverPoint 9
not changing individuals
crossoverPoint 10


@@@@ Mutacao
@@@ mutated [1]
@@@ mutated [0, 0.527437589786448]


@@@@ Calculando fitness
verifyEntry ([5], [6], [1, 9])

achei cache 0.7796610169491526  individuo =  1 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 5])

achei cache 0.7796610169491526  individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 5])

achei cache 0.7796610169491526  individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [6], [1, 9])

achei cache 0.7796610169491526  individuo =  3 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])] 
 fitness =  0.7796610169491526
verifyEntry ([1], [2], [1, 6], [1, 0.513092130356105])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=64, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.513092130356105, inplace=False)
  (3): Linear(in_features=64, out_features=2, bias=True)
)

Best epoch: 15 with loss: 0.69 and acc: 50.00%
2003.60 total seconds elapsed. 100.18 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6957661741870945
@@@@ individuo =  7 [list([1]) list([2]) list([0, 12]) list([1, 0.4182715622480021])
 list([0, 10]) list([0, 0.5959958034122956]) list([0, 11])
 list([1, 0.19246754057189475]) list([1, 6]) list([1, 0.513092130356105])
 list([0, 5]) list([0, 0.3081073748183189])] 
 fitness =  0.4915254237288136
verifyEntry ([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=64, bias=True)
  (1): ReLU()
  (2): Linear(in_features=64, out_features=16, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.4612340823084866, inplace=False)
  (5): Linear(in_features=16, out_features=1024, bias=True)
  (6): ReLU()
  (7): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
4872.00 total seconds elapsed. 81.20 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.5703162783283299
@@@@ individuo =  0 [list([5]) list([6]) list([0, 9]) list([1, 0.1316026430944374])
 list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([0, 0.39659896345628654])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 5])

achei cache 0.7796610169491526  individuo =  4 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([1], [1], [1, 3], [1, 6])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=8, bias=True)
  (1): ReLU()
  (2): Linear(in_features=8, out_features=64, bias=True)
  (3): ReLU()
  (4): Linear(in_features=64, out_features=2, bias=True)
)

Best epoch: 3 with loss: 0.69 and acc: 50.00%
982.94 total seconds elapsed. 98.29 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6969279758000778
@@@@ individuo =  2 [list([1]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
 list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
 list([0, 0.46189203936518713]) list([0, 9]) list([0, 0.2993606380247218])
 list([1, 6]) list([0, 0.13281096878473833])] 
 fitness =  0.4915254237288136
verifyEntry ([5], [1], [1, 3])

achei cache 0.6440677966101694  individuo =  6 [list([5]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
 list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
 list([0, 0.46189203936518713]) list([0, 9]) list([1, 0.513092130356105])
 list([0, 5]) list([0, 0.3081073748183189])] 
 fitness =  0.6440677966101694
verifyEntry ([4], [4], [1, 9])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.72 and acc: 46.67%
3662.26 total seconds elapsed. 91.56 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.728814             0.62069             0.833333      0.692308
TestLoader Losses 0.47923446509797696
@@@@ individuo =  5 [list([4]) list([4]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])] 
 fitness =  0.7288135593220338
result (0, 0.7796610169491526)
result (1, 0.7796610169491526)
result (2, 0.4915254237288136)
result (3, 0.7796610169491526)
result (4, 0.7796610169491526)
result (5, 0.7288135593220338)
result (6, 0.6440677966101694)
result (7, 0.4915254237288136)
result (8, 0.7796610169491526)
result (9, 0.7796610169491526)


 Saving new generated items of geração  0

individuo [list([5]) list([6]) list([0, 9]) list([1, 0.1316026430944374])
 list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([0, 0.39659896345628654])]  key  ([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])]  key  ([5], [6], [1, 9]) 


individuo [list([1]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
 list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
 list([0, 0.46189203936518713]) list([0, 9]) list([0, 0.2993606380247218])
 list([1, 6]) list([0, 0.13281096878473833])]  key  ([1], [1], [1, 3], [1, 6]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])]  key  ([5], [6], [1, 9]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 


individuo [list([4]) list([4]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])]  key  ([4], [4], [1, 9]) 


individuo [list([5]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
 list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
 list([0, 0.46189203936518713]) list([0, 9]) list([1, 0.513092130356105])
 list([0, 5]) list([0, 0.3081073748183189])]  key  ([5], [1], [1, 3]) 


individuo [list([1]) list([2]) list([0, 12]) list([1, 0.4182715622480021])
 list([0, 10]) list([0, 0.5959958034122956]) list([0, 11])
 list([1, 0.19246754057189475]) list([1, 6]) list([1, 0.513092130356105])
 list([0, 5]) list([0, 0.3081073748183189])]  key  ([1], [2], [1, 6], [1, 0.513092130356105]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136}


 $$$$$$$$ Geração  1
population =  [[list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.054754455415959864])]
 [list([5]) list([6]) list([0, 9]) list([1, 0.1316026430944374])
  list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
  list([1, 0.4612340823084866]) list([0, 10])
  list([1, 0.10140884580920874]) list([1, 10])
  list([0, 0.39659896345628654])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([0, 11])
  list([0, 0.5882144812345669])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([0, 11])
  list([0, 0.5882144812345669])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([4]) list([4]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([0, 11])
  list([0, 0.5882144812345669])]
 [list([5]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
  list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
  list([0, 0.46189203936518713]) list([0, 9])
  list([1, 0.513092130356105]) list([0, 5]) list([0, 0.3081073748183189])]
 [list([1]) list([1]) list([0, 7]) list([0, 0.5553270923377422])
  list([0, 11]) list([1, 0.36420741739540713]) list([1, 3])
  list([0, 0.46189203936518713]) list([0, 9])
  list([0, 0.2993606380247218]) list([1, 6])
  list([0, 0.13281096878473833])]]
populationFitness =  [0.79661017 0.77966102 0.77966102 0.77966102 0.77966102 0.77966102
 0.77966102 0.72881356 0.6440678  0.49152542]
bestParent, bestParentFitness [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9])
 list([1, 0.054754455415959864])] 0.7966101694915254


@@@@ Selecao
indexParent 1
indexParent 4
indexParent 0
indexParent 4
indexParent 0
indexParent 5
indexParent 0
indexParent 2
indexParent 3
indexParent 5


@@@@ Crossover
crossoverPoint 7
crossoverPoint 8
crossoverPoint 3
crossoverPoint 10
crossoverPoint 5


@@@@ Mutacao
@@@ mutated [1, 0.39659896345628654]
@@@ mutated [1, 0.39019592804562625]


@@@@ Calculando fitness
verifyEntry ([3], [3], [1, 9], [1, 10], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=32, bias=True)
  (5): ReLU()
  (6): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
5741.39 total seconds elapsed. 191.38 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.862069             0.766667      0.819672
TestLoader Losses 0.491009547548779
@@@@ individuo =  1 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.39659896345628654, inplace=False)
  (5): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 43.33%
7274.53 total seconds elapsed. 181.86 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.758621             0.866667           0.8
TestLoader Losses 0.4839153037232868
@@@@ individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([1, 0.39659896345628654])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
7306.09 total seconds elapsed. 182.65 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.4602256477889368
@@@@ individuo =  6 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5393079914179616, inplace=False)
  (7): Linear(in_features=2048, out_features=512, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.39019592804562625, inplace=False)
  (10): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
7313.50 total seconds elapsed. 182.84 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.694915            0.517241             0.866667         0.625
TestLoader Losses 0.4932147395812859
@@@@ individuo =  7 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.6949152542372882
verifyEntry ([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=64, bias=True)
  (1): ReLU()
  (2): Linear(in_features=64, out_features=16, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.4393708615953515, inplace=False)
  (5): Linear(in_features=16, out_features=32, bias=True)
  (6): ReLU()
  (7): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 8 with loss: 0.69 and acc: 45.00%
9293.35 total seconds elapsed. 154.89 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.862069             0.766667      0.819672
TestLoader Losses 0.6537103380187083
@@@@ individuo =  0 [list([5]) list([6]) list([0, 9]) list([1, 0.1316026430944374])
 list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8135593220338984
verifyEntry ([3], [3], [1, 10], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 50.00%
5697.37 total seconds elapsed. 189.91 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6932702913122663
@@@@ individuo =  2 [list([3]) list([3]) list([0, 11]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.4915254237288136
verifyEntry ([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=512, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.39019592804562625, inplace=False)
  (5): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
5780.19 total seconds elapsed. 96.34 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.46319324283276575
@@@@ individuo =  8 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 9], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 43.33%
9301.91 total seconds elapsed. 155.03 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.827586             0.766667           0.8
TestLoader Losses 0.49980973086114655
@@@@ individuo =  4 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5393079914179616, inplace=False)
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.72 and acc: 45.00%
5725.51 total seconds elapsed. 190.85 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.694915            0.965517             0.433333      0.756757
TestLoader Losses 0.7188563422631409
@@@@ individuo =  3 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([0, 11]) list([0, 0.5882144812345669])] 
 fitness =  0.6949152542372882
verifyEntry ([5], [4], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
4315.28 total seconds elapsed. 107.88 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.896552             0.766667       0.83871
TestLoader Losses 0.510103609097206
@@@@ individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])] 
 fitness =  0.8305084745762712
result (0, 0.8135593220338984)
result (1, 0.8135593220338984)
result (2, 0.4915254237288136)
result (3, 0.6949152542372882)
result (4, 0.7966101694915254)
result (5, 0.8135593220338984)
result (6, 0.8305084745762712)
result (7, 0.6949152542372882)
result (8, 0.8305084745762712)
result (9, 0.8305084745762712)


 Saving new generated items of geração  1

individuo [list([5]) list([6]) list([0, 9]) list([1, 0.1316026430944374])
 list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5]) 


individuo [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([3], [3], [1, 9], [1, 10], [1, 5]) 


individuo [list([3]) list([3]) list([0, 11]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([3], [3], [1, 10], [1, 5]) 


individuo [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([0, 11]) list([0, 0.5882144812345669])]  key  ([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 9], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([1, 0.39659896345628654])]  key  ([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
 list([1, 10]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([0, 11])
 list([0, 0.5882144812345669])]  key  ([5], [4], [1, 10]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712}


 $$$$$$$$ Geração  2
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.15393730406864373])
  list([1, 10]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([0, 11])
  list([0, 0.5882144812345669])]
 [list([5]) list([6]) list([0, 9]) list([1, 0.1316026430944374])
  list([1, 6]) list([0, 0.4022207001336205]) list([1, 4])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4612340823084866]) list([0, 10])
  list([1, 0.10140884580920874]) list([1, 10])
  list([1, 0.39659896345628654])]
 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 11])
  list([0, 0.5882144812345669])]
 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.81355932 0.81355932 0.81355932
 0.79661017 0.79661017 0.69491525 0.69491525]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 0
indexParent 6
indexParent 7
indexParent 5
indexParent 7
indexParent 4
indexParent 1
indexParent 5
indexParent 0
indexParent 7


@@@@ Crossover
not changing individuals
crossoverPoint 7
crossoverPoint 4
not changing individuals
crossoverPoint 9


@@@@ Mutacao
@@@ mutated [5]
@@@ mutated [0, 0.33319165068279316]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 43.33%
5499.81 total seconds elapsed. 137.50 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.46269189149646434
@@@@ individuo =  4 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [5], [1, 9], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 43.33%
6624.95 total seconds elapsed. 132.50 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.758621                  0.8       0.77193
TestLoader Losses 0.46589390150571275
@@@@ individuo =  7 [list([3]) list([5]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.39659896345628654, inplace=False)
  (5): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 2 with loss: 0.69 and acc: 43.33%
7393.62 total seconds elapsed. 123.23 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.793103             0.766667      0.779661
TestLoader Losses 0.48432938426227895
@@@@ individuo =  1 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([1, 0.39659896345628654])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  3 [list([5]) list([6]) list([0, 8]) list([0, 0.33319165068279316])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=32, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=32, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 3 with loss: 0.69 and acc: 46.67%
7394.57 total seconds elapsed. 123.24 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.931034             0.566667      0.782609
TestLoader Losses 0.5889705076056012
@@@@ individuo =  9 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7457627118644068
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=32, bias=True)
  (5): ReLU()
  (6): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
7400.56 total seconds elapsed. 123.34 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.793103                  0.8      0.793103
TestLoader Losses 0.4782450067794929
@@@@ individuo =  2 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5393079914179616, inplace=False)
  (7): Linear(in_features=2048, out_features=512, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.39019592804562625, inplace=False)
  (10): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
4209.88 total seconds elapsed. 140.33 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.965517             0.566667           0.8
TestLoader Losses 0.5714756987862668
@@@@ individuo =  5 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [4], [1, 10], [1, 5])

achei cache 0.7796610169491526  individuo =  6 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])

achei cache 0.8135593220338984  individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([1, 0.39659896345628654])] 
 fitness =  0.8135593220338984
result (0, 0.8305084745762712)
result (1, 0.7796610169491526)
result (2, 0.7966101694915254)
result (3, 0.8305084745762712)
result (4, 0.7966101694915254)
result (5, 0.7627118644067796)
result (6, 0.7796610169491526)
result (7, 0.7796610169491526)
result (8, 0.8135593220338984)
result (9, 0.7457627118644068)


 Saving new generated items of geração  2

individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([1, 0.39659896345628654])]  key  ([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 9], [1, 10], [1, 5]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.33319165068279316])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11]) 


individuo [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 11])
 list([1, 0.5393079914179616]) list([1, 9]) list([1, 0.39019592804562625])]  key  ([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 


individuo [list([3]) list([5]) list([0, 11]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([3], [5], [1, 9], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4612340823084866]) list([0, 10])
 list([1, 0.10140884580920874]) list([1, 10])
 list([1, 0.39659896345628654])]  key  ([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068}


 $$$$$$$$ Geração  3
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.33319165068279316])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4612340823084866]) list([0, 10])
  list([1, 0.10140884580920874]) list([1, 10])
  list([1, 0.39659896345628654])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4612340823084866]) list([0, 10])
  list([1, 0.10140884580920874]) list([1, 10])
  list([1, 0.39659896345628654])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([3]) list([5]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([3]) list([3]) list([0, 11]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.81355932 0.79661017 0.79661017
 0.77966102 0.77966102 0.77966102 0.76271186]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 0
indexParent 0
indexParent 5
indexParent 0
indexParent 0
indexParent 4
indexParent 8
indexParent 0
indexParent 2
indexParent 5


@@@@ Crossover
crossoverPoint 6
crossoverPoint 9
not changing individuals
crossoverPoint 3
crossoverPoint 4


@@@@ Mutacao
@@@ mutated [1, 5]
@@@ mutated [1, 0.2700361381973147]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5393079914179616, inplace=False)
  (7): Linear(in_features=2048, out_features=512, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.39019592804562625, inplace=False)
  (10): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 46.67%
4525.89 total seconds elapsed. 113.15 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.728814            0.931034             0.533333      0.771429
TestLoader Losses 0.5348419304621421
@@@@ individuo =  2 [list([5]) list([4]) list([1, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7288135593220338
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 5])

achei cache 0.7966101694915254  individuo =  7 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 9], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 43.33%
4537.22 total seconds elapsed. 113.43 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.827586             0.766667           0.8
TestLoader Losses 0.5399874074984405
@@@@ individuo =  8 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [4], [1, 10], [1, 11])

achei cache 0.7966101694915254  individuo =  6 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=512, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.39019592804562625, inplace=False)
  (5): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 2 with loss: 0.69 and acc: 46.67%
4540.98 total seconds elapsed. 113.52 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.827586                  0.7      0.774194
TestLoader Losses 0.5240910992784015
@@@@ individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [6], [1, 10], [1, 11])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 46.67%
5770.51 total seconds elapsed. 96.18 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.45591874445899055
@@@@ individuo =  4 [list([5]) list([6]) list([0, 8]) list([0, 0.33319165068279316])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.2700361381973147, inplace=False)
  (3): Linear(in_features=1024, out_features=2048, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.5393079914179616, inplace=False)
  (6): Linear(in_features=2048, out_features=512, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.39019592804562625, inplace=False)
  (9): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 41 with loss: 0.69 and acc: 48.33%
5226.56 total seconds elapsed. 104.53 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.310345             0.966667      0.461538
TestLoader Losses 0.6188695673215188
@@@@ individuo =  3 [list([3]) list([5]) list([0, 11]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.6440677966101694
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.7288135593220338)
result (3, 0.6440677966101694)
result (4, 0.7966101694915254)
result (5, 0.8305084745762712)
result (6, 0.7966101694915254)
result (7, 0.7966101694915254)
result (8, 0.7966101694915254)
result (9, 0.7627118644067796)


 Saving new generated items of geração  3

individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([1, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([3]) list([5]) list([0, 11]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.33319165068279316])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 10], [1, 11]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 9], [1, 10], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 9], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
 list([1, 0.028315097031925338]) list([0, 12])
 list([1, 0.18995458895816658]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796}


 $$$$$$$$ Geração  4
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.33319165068279316])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([0, 0.13747672383505857]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 9]) list([0, 0.11445386766853176]) list([0, 6])
  list([1, 0.028315097031925338]) list([0, 12])
  list([1, 0.18995458895816658]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([1, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.79661017 0.79661017
 0.79661017 0.79661017 0.76271186 0.72881356]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 0
indexParent 3
indexParent 5
indexParent 6
indexParent 3
indexParent 7
indexParent 1
indexParent 0
indexParent 7
indexParent 0


@@@@ Crossover
not changing individuals
crossoverPoint 7
crossoverPoint 4
not changing individuals
crossoverPoint 6


@@@@ Mutacao
@@@ mutated [2]
@@@ mutated [2]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  7 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [2], [1, 9], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=32, bias=True)
  (3): ReLU()
  (4): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 43.33%
2585.82 total seconds elapsed. 129.29 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.896552             0.633333      0.787879
TestLoader Losses 0.6081970273438146
@@@@ individuo =  2 [list([5]) list([2]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  3 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.2700361381973147, inplace=False)
  (3): Linear(in_features=1024, out_features=32, bias=True)
  (4): ReLU()
  (5): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
4871.04 total seconds elapsed. 121.78 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.827586                  0.7      0.774194
TestLoader Losses 0.5459888784562127
@@@@ individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 46.67%
4904.10 total seconds elapsed. 122.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.931034             0.633333       0.80597
TestLoader Losses 0.48096338318566145
@@@@ individuo =  4 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.2700361381973147, inplace=False)
  (3): Linear(in_features=1024, out_features=2048, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.5393079914179616, inplace=False)
  (6): Linear(in_features=2048, out_features=512, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.39019592804562625, inplace=False)
  (9): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
4905.03 total seconds elapsed. 122.63 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.4888922794390533
@@@@ individuo =  0 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 5])

achei cache 0.7796610169491526  individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.2700361381973147, inplace=False)
  (3): Linear(in_features=1024, out_features=2048, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.5393079914179616, inplace=False)
  (6): Linear(in_features=2048, out_features=512, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.39019592804562625, inplace=False)
  (9): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
4901.93 total seconds elapsed. 122.55 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.4888922794390533
@@@@ individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.4393708615953515, inplace=False)
  (5): Linear(in_features=1024, out_features=2048, bias=True)
  (6): ReLU()
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
6091.68 total seconds elapsed. 101.53 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.4555823919126543
@@@@ individuo =  6 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 5 with loss: 0.69 and acc: 50.00%
4925.08 total seconds elapsed. 123.13 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6930231239836094
@@@@ individuo =  5 [list([2]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.5084745762711864
result (0, 0.7796610169491526)
result (1, 0.7796610169491526)
result (2, 0.7627118644067796)
result (3, 0.8305084745762712)
result (4, 0.7796610169491526)
result (5, 0.5084745762711864)
result (6, 0.7966101694915254)
result (7, 0.8305084745762712)
result (8, 0.7796610169491526)
result (9, 0.7627118644067796)


 Saving new generated items of geração  4

individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 


individuo [list([5]) list([2]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [2], [1, 9], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([2]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11]) 


individuo [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([5], [2], [1, 9], [1, 5])': 0.7627118644067796, '([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.5084745762711864, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])': 0.7966101694915254, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])': 0.7627118644067796}


 $$$$$$$$ Geração  5
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([0, 0.13747672383505857]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
  list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([2]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.79661017 0.77966102 0.77966102
 0.77966102 0.77966102 0.76271186 0.76271186]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 5
indexParent 1
indexParent 1
indexParent 6
indexParent 3
indexParent 3
indexParent 1
indexParent 1
indexParent 1
indexParent 1


@@@@ Crossover
crossoverPoint 5
crossoverPoint 8
crossoverPoint 10
crossoverPoint 5
crossoverPoint 8


@@@@ Mutacao
@@@ mutated [6]
@@@ mutated [6]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  4 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 5])

achei cache 0.7796610169491526  individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])

achei cache 0.7966101694915254  individuo =  2 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
3803.59 total seconds elapsed. 63.39 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.43443616467007135
@@@@ individuo =  0 [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
3804.73 total seconds elapsed. 63.41 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.43443616467007135
@@@@ individuo =  3 [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.7796610169491526  individuo =  6 [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])

achei cache 0.7966101694915254  individuo =  7 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.7966101694915254)
result (3, 0.8305084745762712)
result (4, 0.8305084745762712)
result (5, 0.7796610169491526)
result (6, 0.7796610169491526)
result (7, 0.7966101694915254)
result (8, 0.8305084745762712)
result (9, 0.8305084745762712)


 Saving new generated items of geração  5

individuo [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11]) 


individuo [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([0, 0.13747672383505857]) list([1, 5]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 5]) 


individuo [list([5]) list([4]) list([0, 5]) list([1, 0.5263633907212457])
 list([1, 9]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([5], [2], [1, 9], [1, 5])': 0.7627118644067796, '([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.5084745762711864, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])': 0.7966101694915254, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])': 0.7627118644067796, '([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712}


 $$$$$$$$ Geração  6
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([0, 0.13747672383505857]) list([1, 5])
  list([0, 0.3285320888868275]) list([0, 8]) list([1, 0.574560927488855])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.79661017 0.79661017 0.77966102]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 6
indexParent 5
indexParent 5
indexParent 8
indexParent 6
indexParent 2
indexParent 3
indexParent 2
indexParent 1
indexParent 6


@@@@ Crossover
crossoverPoint 5
crossoverPoint 10
crossoverPoint 2
crossoverPoint 6
not changing individuals


@@@@ Mutacao
@@@ mutated [1, 0.11983698019239161]
@@@ mutated [1, 0.527437589786448]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  2 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 41.67%
4612.45 total seconds elapsed. 115.31 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.862069                  0.8      0.833333
TestLoader Losses 0.48980151798765537
@@@@ individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  3 [list([5]) list([6]) list([0, 5]) list([1, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
4615.90 total seconds elapsed. 115.40 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.44941041328139225
@@@@ individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
4619.73 total seconds elapsed. 115.49 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.44941041328139225
@@@@ individuo =  0 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
4617.63 total seconds elapsed. 115.44 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.44941041328139225
@@@@ individuo =  7 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  4 [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=512, bias=True)
  (1): ReLU()
  (2): Linear(in_features=512, out_features=1024, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.4393708615953515, inplace=False)
  (5): Linear(in_features=1024, out_features=2048, bias=True)
  (6): ReLU()
  (7): Linear(in_features=2048, out_features=512, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.39019592804562625, inplace=False)
  (10): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 50.00%
5824.34 total seconds elapsed. 97.07 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.431850039857929
@@@@ individuo =  6 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
4620.42 total seconds elapsed. 115.51 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.44941041328139225
@@@@ individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.8305084745762712)
result (3, 0.8305084745762712)
result (4, 0.8305084745762712)
result (5, 0.8305084745762712)
result (6, 0.8305084745762712)
result (7, 0.8305084745762712)
result (8, 0.8305084745762712)
result (9, 0.8305084745762712)


 Saving new generated items of geração  6

individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 5]) list([1, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
 list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([0, 0.3285320888868275])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([5], [2], [1, 9], [1, 5])': 0.7627118644067796, '([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.5084745762711864, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])': 0.7966101694915254, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])': 0.7627118644067796, '([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712}


 $$$$$$$$ Geração  7
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 5]) list([1, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([6]) list([0, 8]) list([0, 0.10933010721347251])
  list([1, 9]) list([0, 0.22221281397693338]) list([1, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.3285320888868275]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.83050847 0.83050847]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 8
indexParent 8
indexParent 9
indexParent 2
indexParent 2
indexParent 2
indexParent 9
indexParent 8
indexParent 8
indexParent 6


@@@@ Crossover
not changing individuals
crossoverPoint 6
crossoverPoint 10
crossoverPoint 3
crossoverPoint 1


@@@@ Mutacao
@@@ mutated [0, 8]
@@@ mutated [0, 0.31390673330704644]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  3 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  6 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  4 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  7 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  2 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.31390673330704644]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.8305084745762712)
result (3, 0.8305084745762712)
result (4, 0.8305084745762712)
result (5, 0.8305084745762712)
result (6, 0.8305084745762712)
result (7, 0.8305084745762712)
result (8, 0.8305084745762712)
result (9, 0.8305084745762712)


 Saving new generated items of geração  7

individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.31390673330704644]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([5], [2], [1, 9], [1, 5])': 0.7627118644067796, '([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.5084745762711864, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])': 0.7966101694915254, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])': 0.7627118644067796, '([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712}


 $$$$$$$$ Geração  8
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.31390673330704644]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.83050847 0.83050847]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 7
indexParent 3
indexParent 5
indexParent 4
indexParent 1
indexParent 2
indexParent 1
indexParent 1
indexParent 2
indexParent 0


@@@@ Crossover
crossoverPoint 6
crossoverPoint 1
not changing individuals
not changing individuals
crossoverPoint 5


@@@@ Mutacao
@@@ mutated [6]
@@@ mutated [1, 4]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  2 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.31390673330704644]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([6], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.39019592804562625, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 45.00%
2523.71 total seconds elapsed. 63.09 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.793103                  0.5      0.686567
TestLoader Losses 0.6779796450825061
@@@@ individuo =  3 [list([6]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.6440677966101694
verifyEntry ([5], [4], [1, 10], [1, 4], [1, 0.5393079914179616])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=16, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5393079914179616, inplace=False)
  (5): Linear(in_features=16, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 40.00%
2508.35 total seconds elapsed. 62.71 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.689655                  0.8      0.727273
TestLoader Losses 0.5908312272217314
@@@@ individuo =  7 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 4]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7457627118644068
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.7796610169491526  individuo =  4 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  6 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.8305084745762712)
result (3, 0.6440677966101694)
result (4, 0.7796610169491526)
result (5, 0.8305084745762712)
result (6, 0.8305084745762712)
result (7, 0.7457627118644068)
result (8, 0.8305084745762712)
result (9, 0.8305084745762712)


 Saving new generated items of geração  8

individuo [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([6]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([6], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.31390673330704644]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 4]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 4], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([5], [2], [1, 9], [1, 5])': 0.7627118644067796, '([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.5084745762711864, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])': 0.7966101694915254, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])': 0.7627118644067796, '([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([6], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [4], [1, 10], [1, 4], [1, 0.5393079914179616])': 0.7457627118644068}


 $$$$$$$$ Geração  9
population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.31390673330704644]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 4])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.77966102 0.74576271]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712


@@@@ Selecao
indexParent 1
indexParent 7
indexParent 7
indexParent 3
indexParent 7
indexParent 1
indexParent 5
indexParent 7
indexParent 2
indexParent 3


@@@@ Crossover
crossoverPoint 9
not changing individuals
crossoverPoint 4
crossoverPoint 10
crossoverPoint 10


@@@@ Mutacao
@@@ mutated [1, 0.20888671039260562]
@@@ mutated [0, 0.11983698019239161]


@@@@ Calculando fitness
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  8 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  2 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  1 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 41.67%
2888.18 total seconds elapsed. 72.20 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.4833849830142522
@@@@ individuo =  3 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  5 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.20888671039260562])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.11983698019239161, inplace=False)
  (5): Linear(in_features=2048, out_features=512, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.20888671039260562, inplace=False)
  (8): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 46.67%
2893.00 total seconds elapsed. 72.32 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.44379945730758924
@@@@ individuo =  6 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.20888671039260562])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 9], [1, 0.39019592804562625])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Linear(in_features=2048, out_features=512, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.39019592804562625, inplace=False)
  (7): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
2891.94 total seconds elapsed. 72.30 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.793103             0.833333      0.807018
TestLoader Losses 0.4401405979011018
@@@@ individuo =  4 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([0, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])

achei cache 0.8305084745762712  individuo =  7 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])] 
 fitness =  0.8305084745762712
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.8305084745762712)
result (3, 0.7966101694915254)
result (4, 0.8135593220338984)
result (5, 0.8305084745762712)
result (6, 0.8305084745762712)
result (7, 0.8305084745762712)
result (8, 0.8305084745762712)
result (9, 0.8305084745762712)


 Saving new generated items of geração  9

individuo [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([0, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.20888671039260562])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.20888671039260562]) 


individuo [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([0, 8]) list([1, 0.574560927488855])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625]) 


individuo [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11])
 list([1, 0.11983698019239161]) list([1, 9])
 list([1, 0.39019592804562625])]  key  ([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625]) 



@@@@ Reinsercao

cacheStore =  {'([2], [3], [1, 9], [1, 3], [1, 0.4113958157040268], [1, 11])': 0.5084745762711864, '([5], [4], [1, 10], [1, 5])': 0.7796610169491526, '([5], [1], [1, 3])': 0.6440677966101694, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.054754455415959864])': 0.7966101694915254, '([2], [6], [1, 10], [1, 5], [1, 0.13165930168768783], [1, 7], [1, 5], [1, 0.031223563990194325])': 0.4915254237288136, '([4], [4], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7627118644067796, '([1], [5], [1, 10], [1, 5], [1, 4], [1, 0.3632860173888613])': 0.5084745762711864, '([4], [3], [1, 8])': 0.7627118644067796, '([1], [2], [1, 6], [1, 6])': 0.5084745762711864, '([5], [6], [1, 9])': 0.7796610169491526, '([5], [6], [1, 6], [1, 4], [1, 0.4612340823084866], [1, 10])': 0.7796610169491526, '([1], [1], [1, 3], [1, 6])': 0.4915254237288136, '([4], [4], [1, 9])': 0.7288135593220338, '([1], [2], [1, 6], [1, 0.513092130356105])': 0.4915254237288136, '([5], [6], [1, 6], [1, 4], [1, 0.4393708615953515], [1, 5])': 0.8135593220338984, '([3], [3], [1, 9], [1, 10], [1, 5])': 0.8135593220338984, '([3], [3], [1, 10], [1, 5])': 0.4915254237288136, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.6949152542372882, '([5], [6], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 10], [1, 0.39659896345628654])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6949152542372882, '([5], [6], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.39659896345628654])': 0.7796610169491526, '([5], [6], [1, 9], [1, 10], [1, 5])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11])': 0.7966101694915254, '([3], [3], [1, 9], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([3], [5], [1, 9], [1, 5])': 0.7796610169491526, '([5], [6], [1, 9], [1, 5], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7457627118644068, '([5], [4], [1, 5], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7288135593220338, '([3], [5], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [6], [1, 10], [1, 11])': 0.7966101694915254, '([5], [4], [1, 9], [1, 5])': 0.7966101694915254, '([5], [4], [1, 9], [1, 9], [1, 0.39019592804562625])': 0.7627118644067796, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([5], [2], [1, 9], [1, 5])': 0.7627118644067796, '([5], [4], [1, 9], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.7796610169491526, '([2], [4], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.5084745762711864, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11])': 0.7966101694915254, '([5], [4], [1, 10], [1, 0.2700361381973147], [1, 5])': 0.7627118644067796, '([5], [6], [1, 10], [1, 11], [1, 0.5393079914179616], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([5], [4], [1, 10], [1, 11], [1, 0.5393079914179616])': 0.8305084745762712, '([5], [6], [1, 9], [1, 10], [1, 0.4393708615953515], [1, 11], [1, 9], [1, 0.39019592804562625])': 0.8305084745762712, '([6], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.39019592804562625])': 0.6440677966101694, '([5], [4], [1, 10], [1, 4], [1, 0.5393079914179616])': 0.7457627118644068, '([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161])': 0.7966101694915254, '([5], [4], [1, 10], [1, 11], [1, 9], [1, 0.39019592804562625])': 0.8135593220338984, '([5], [4], [1, 10], [1, 11], [1, 0.11983698019239161], [1, 9], [1, 0.20888671039260562])': 0.8305084745762712}

Final population

population =  [[list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.20888671039260562])]
 [list([5]) list([4]) list([0, 8]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([0, 8]) list([1, 0.574560927488855])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.5393079914179616]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([1, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]
 [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
  list([1, 10]) list([0, 0.2700361381973147]) list([0, 10])
  list([1, 0.4393708615953515]) list([1, 11])
  list([0, 0.11983698019239161]) list([1, 9])
  list([1, 0.39019592804562625])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.83050847 0.83050847 0.83050847 0.81355932]
bestParent, bestParentFitness [list([5]) list([4]) list([0, 5]) list([0, 0.527437589786448])
 list([1, 10]) list([1, 0.2700361381973147]) list([0, 10])
 list([1, 0.4393708615953515]) list([1, 11]) list([1, 0.5393079914179616])
 list([1, 9]) list([1, 0.39019592804562625])] 0.8305084745762712
