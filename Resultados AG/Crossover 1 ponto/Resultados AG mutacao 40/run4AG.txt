tp, tour, tr, numberIterations, tm, isNumpy 10 2 80 10 40 True
isNumpy True
Load dataset
Lidando com numpy data
shuffleSeed 1
n_epochs 30 max_epochs_stop 10
device =  cpu

PrepareDataFromNumpy arrays
getFilesName
Imagens_numpy_array_allData_entireDatabase_MinMax_extrapolandoLimites
readFilesByPatient saudaveis
readFilesByPatient doentes

Split Healthy Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0189', 'T0196', 'T0193', 'T0220', 'T0199', 'T0217', 'T0188', 'T0224', 'T0216', 'T0211', 'T0259', 'T0194', 'T0200', 'T0239', 'T0236', 'T0272', 'T0201', 'T0226', 'T0195', 'T0221', 'T0238', 'T0237', 'T0234', 'T0275', 'T0222', 'T0261']
validationPatients ['T0243', 'T0276', 'T0191', 'T0219', 'T0244', 'T0212']
testPatients ['T0218', 'T0233', 'T0208', 'T0190', 'T0225', 'T0177']
imagens do trainDataset 128
imagens do testDataset 30
imagens do validationDataset 30
train (128, 3, 224, 224)
test (30, 3, 224, 224)
validation (30, 3, 224, 224)

Split Cancer Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0267', 'T0255', 'T0138', 'T0286', 'T0198', 'T0246', 'T0192', 'T0258', 'T0202', 'T0209', 'T0241', 'T0179', 'T0287', 'T0213', 'T0203', 'T0210', 'T0240', 'T0270', 'T0180', 'T0264', 'T0269', 'T0282', 'T0281', 'T0277', 'T0273', 'T0256']
validationPatients ['T0266', 'T0245', 'T0263', 'T0260', 'T0181', 'T0204']
testPatients ['T0257', 'T0278', 'T0285', 'T0268', 'T0283', 'T0271']
imagens do trainDataset 129
imagens do testDataset 29
imagens do validationDataset 30
train (129, 3, 224, 224)
test (29, 3, 224, 224)
validation (30, 3, 224, 224)

Total de dados para treinamento 257

Total de dados para teste 59

Total de dados para validacao 60
prepareNumpyDatasetBalancedData
Sem aumento de dados
com testValidationTransform Compose(
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
   category  Treinamento  Validação  Teste
0  Saudável          128         30     30
1    Doente          129         30     29


@@@@ Init pop


@@@@ Calculando fitness

Best epoch: 9 with loss: 0.70 and acc: 50.00%
1932.64 total seconds elapsed. 193.26 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6976261957217071

Best epoch: 0 with loss: 0.69 and acc: 50.00%
3242.03 total seconds elapsed. 162.10 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.525424                 1.0             0.066667      0.674419
TestLoader Losses 0.859350165068093

Best epoch: 6 with loss: 0.69 and acc: 50.00%
1911.86 total seconds elapsed. 191.19 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6930940929105727

Best epoch: 4 with loss: 0.69 and acc: 50.00%
1325.94 total seconds elapsed. 132.59 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.7038515937530389

Best epoch: 27 with loss: 0.69 and acc: 50.00%
4270.18 total seconds elapsed. 142.34 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6930984824390735

Best epoch: 1 with loss: 0.69 and acc: 61.67%
5082.30 total seconds elapsed. 127.06 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.448276             0.833333      0.553191
TestLoader Losses 0.6862288854889951

Best epoch: 2 with loss: 0.69 and acc: 50.00%
1910.67 total seconds elapsed. 191.07 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6930056729559171

Best epoch: 48 with loss: 0.69 and acc: 53.33%
5122.75 total seconds elapsed. 85.38 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.610169            0.724138                  0.5      0.646154
TestLoader Losses 0.6848975500818026

Best epoch: 49 with loss: 0.69 and acc: 50.00%
5928.47 total seconds elapsed. 118.57 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6931745834269766

Best epoch: 0 with loss: 0.70 and acc: 46.67%
5812.72 total seconds elapsed. 116.25 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.4914278670892877


 $$$$$$$$ Geração  0
population =  [[list([6]) list([1]) list([1, 12]) list([1, 0.2537126344943655])
  list([1, 3]) list([1, 0.0668728706956672]) list([0, 6])
  list([1, 0.26009847792573204]) list([1, 7])
  list([1, 0.27860266358818003]) list([1, 3])
  list([1, 0.09045822847705795])]
 [list([1]) list([5]) list([1, 9]) list([1, 0.32670644872096705])
  list([1, 12]) list([0, 0.14675929754092717]) list([1, 10])
  list([0, 0.5834219750338898]) list([0, 8])
  list([0, 0.029951541666646774]) list([1, 5])
  list([0, 0.41751164311128053])]
 [list([3]) list([2]) list([1, 5]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([3]) list([3]) list([0, 4]) list([0, 0.14660341778505867])
  list([1, 4]) list([1, 0.28803756004364284]) list([1, 6])
  list([1, 0.40266152225376406]) list([1, 10])
  list([0, 0.09323062933811628]) list([0, 9])
  list([1, 0.2670339014487774])]
 [list([1]) list([1]) list([1, 10]) list([0, 0.06671774612183941])
  list([1, 8]) list([1, 0.2039106260589793]) list([1, 5])
  list([0, 0.5095243005174626]) list([0, 9])
  list([0, 0.5223836669922828]) list([0, 10])
  list([1, 0.5145748785559168])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
  list([1, 7]) list([0, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([3]) list([1]) list([1, 3]) list([1, 0.13076280004790872])
  list([0, 10]) list([1, 0.37830107829917264]) list([0, 12])
  list([0, 0.44371124882389545]) list([1, 9])
  list([0, 0.23303528048150668]) list([0, 8])
  list([0, 0.47133505474681947])]
 [list([6]) list([6]) list([0, 4]) list([1, 0.09332907578557965])
  list([1, 5]) list([1, 0.2901137631145074]) list([1, 12])
  list([1, 0.0684603976959054]) list([1, 11])
  list([1, 0.24998893582595721]) list([1, 5])
  list([1, 0.2054901046603927])]
 [list([1]) list([1]) list([1, 5]) list([1, 0.47853435133859745])
  list([0, 4]) list([1, 0.2881487319772964]) list([0, 11])
  list([1, 0.3827725489071136]) list([0, 4])
  list([0, 0.20491816029716806]) list([0, 6])
  list([0, 0.44294217189558976])]]
populationFitness =  [0.49152542 0.49152542 0.52542373 0.50847458 0.50847458 0.79661017
 0.6440678  0.50847458 0.61016949 0.49152542]
bestParent, bestParentFitness [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
 list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
 list([0, 0.2656203414280269]) list([1, 8])
 list([1, 0.013770609136524503]) list([0, 5])
 list([1, 0.5838660227976267])] 0.7966101694915254


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.5254237288135594  individuo =  6 [list([3]) list([2]) list([1, 5]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
 list([0, 0.14214344101330922]) list([0, 8]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.5254237288135594

achei cache 0.6440677966101694  individuo =  3 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
 list([1, 7]) list([0, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.6440677966101694

achei cache 0.5084745762711864  individuo =  9 [list([3]) list([3]) list([0, 4]) list([0, 0.14660341778505867])
 list([1, 4]) list([1, 0.28803756004364284]) list([1, 6])
 list([1, 0.40266152225376406]) list([1, 10])
 list([0, 0.09323062933811628]) list([0, 9]) list([1, 0.2670339014487774])] 
 fitness =  0.5084745762711864

achei cache 0.5084745762711864  individuo =  1 [list([3]) list([3]) list([0, 4]) list([0, 0.14660341778505867])
 list([1, 4]) list([1, 0.28803756004364284]) list([1, 6])
 list([1, 0.40266152225376406]) list([1, 10])
 list([0, 0.09323062933811628]) list([0, 9]) list([1, 0.2670339014487774])] 
 fitness =  0.5084745762711864

Best epoch: 1 with loss: 0.69 and acc: 63.33%
4647.49 total seconds elapsed. 116.19 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.576271            0.275862             0.866667      0.390244
TestLoader Losses 0.6880887181071912

Best epoch: 2 with loss: 0.69 and acc: 38.33%
6078.71 total seconds elapsed. 101.31 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.728814            0.758621                  0.7      0.733333
TestLoader Losses 0.6805119756924904

Best epoch: 1 with loss: 0.71 and acc: 45.00%
6068.40 total seconds elapsed. 101.14 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.965517             0.666667      0.835821
TestLoader Losses 0.46538356047565654

Best epoch: 2 with loss: 0.69 and acc: 50.00%
1143.09 total seconds elapsed. 114.31 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.7014475232463772

Best epoch: 1 with loss: 0.69 and acc: 50.00%
2537.14 total seconds elapsed. 126.86 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6940353896658299

Best epoch: 0 with loss: 0.70 and acc: 46.67%
2503.28 total seconds elapsed. 125.16 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.896552                  0.6      0.776119
TestLoader Losses 0.5013722605624441


@@@@ Reinsercao


 $$$$$$$$ Geração  1
population =  [[list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([4]) list([2]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([6]) list([6]) list([0, 4]) list([1, 0.09332907578557965])
  list([1, 5]) list([1, 0.2901137631145074]) list([1, 12])
  list([1, 0.0684603976959054]) list([0, 9])
  list([0, 0.5223836669922828]) list([0, 10])
  list([1, 0.5145748785559168])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
  list([1, 7]) list([0, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([3]) list([2]) list([1, 5]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([3]) list([3]) list([0, 4]) list([0, 0.14660341778505867])
  list([1, 4]) list([1, 0.28803756004364284]) list([1, 6])
  list([1, 0.40266152225376406]) list([1, 10])
  list([0, 0.09323062933811628]) list([0, 9])
  list([1, 0.2670339014487774])]
 [list([1]) list([1]) list([1, 10]) list([0, 0.06671774612183941])
  list([0, 8]) list([1, 0.2039106260589793]) list([1, 5])
  list([0, 0.5095243005174626]) list([1, 11])
  list([1, 0.24998893582595721]) list([1, 5])
  list([1, 0.2054901046603927])]
 [list([3]) list([3]) list([0, 4]) list([0, 0.14660341778505867])
  list([1, 4]) list([1, 0.28803756004364284]) list([1, 6])
  list([1, 0.40266152225376406]) list([1, 10])
  list([0, 0.09323062933811628]) list([0, 9])
  list([1, 0.2670339014487774])]]
populationFitness =  [0.81355932 0.79661017 0.74576271 0.72881356 0.6440678  0.57627119
 0.52542373 0.50847458 0.50847458 0.50847458]
bestParent, bestParentFitness [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
 list([0, 0.14214344101330922]) list([0, 8]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 0.8135593220338984


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

Best epoch: 1 with loss: 0.69 and acc: 45.00%
3140.94 total seconds elapsed. 157.05 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.677966            0.965517                  0.4      0.746667
TestLoader Losses 0.7061781640780174

Best epoch: 35 with loss: 0.70 and acc: 48.33%
5703.80 total seconds elapsed. 142.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.525424            0.034483                  1.0      0.066667
TestLoader Losses 0.6965922986046743

achei cache 0.6440677966101694  individuo =  6 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
 list([1, 7]) list([0, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.6440677966101694

Best epoch: 28 with loss: 0.70 and acc: 41.67%
5710.34 total seconds elapsed. 142.76 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.542373            0.172414                  0.9       0.27027
TestLoader Losses 0.6932954909437794

Best epoch: 11 with loss: 0.69 and acc: 50.00%
5717.32 total seconds elapsed. 142.93 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.610169                 1.0             0.233333      0.716049
TestLoader Losses 0.6875156548063633

Best epoch: 1 with loss: 0.70 and acc: 48.33%
6528.04 total seconds elapsed. 130.56 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.758621             0.833333      0.785714
TestLoader Losses 0.43399243359848605

achei cache 0.7966101694915254  individuo =  3 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
 list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
 list([0, 0.2656203414280269]) list([1, 8])
 list([1, 0.013770609136524503]) list([0, 5])
 list([1, 0.5838660227976267])] 
 fitness =  0.7966101694915254

Best epoch: 2 with loss: 0.69 and acc: 40.00%
6544.39 total seconds elapsed. 130.89 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.586934740260496

Best epoch: 1 with loss: 0.70 and acc: 46.67%
7163.08 total seconds elapsed. 119.38 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.586207                  0.9      0.693878
TestLoader Losses 0.45961280545945893

Best epoch: 2 with loss: 0.71 and acc: 45.00%
7163.86 total seconds elapsed. 119.40 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.689655                  0.9      0.769231
TestLoader Losses 0.5070593847056567


@@@@ Reinsercao


 $$$$$$$$ Geração  2
population =  [[list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([5]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 8]) list([1, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 9])
  list([0, 0.40442473397643675])]
 [list([3]) list([2]) list([1, 5]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([1, 0.33641801546166666])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
  list([1, 7]) list([0, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
  list([1, 8]) list([0, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.034225342154483536])
  list([1, 7]) list([0, 0.37579907778154803]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]]
populationFitness =  [0.81355932 0.79661017 0.79661017 0.79661017 0.77966102 0.74576271
 0.6779661  0.6440678  0.61016949 0.54237288]
bestParent, bestParentFitness [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
 list([0, 0.14214344101330922]) list([0, 8]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 0.8135593220338984


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.7966101694915254  individuo =  3 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.7966101694915254

Best epoch: 2 with loss: 0.69 and acc: 45.00%
4709.59 total seconds elapsed. 117.74 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.931034             0.366667          0.72
TestLoader Losses 0.6863236275769896

achei cache 0.7457627118644068  individuo =  6 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.5961541062045442]) list([0, 11])
 list([0, 0.14214344101330922]) list([0, 8]) list([1, 0.4801557589296588])
 list([1, 9]) list([0, 0.40442473397643675])] 
 fitness =  0.7457627118644068

Best epoch: 1 with loss: 0.70 and acc: 41.67%
5680.38 total seconds elapsed. 113.61 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.896552             0.766667       0.83871
TestLoader Losses 0.44412233112222055

Best epoch: 0 with loss: 0.70 and acc: 41.67%
6481.23 total seconds elapsed. 108.02 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712             0.62069                  0.9          0.72
TestLoader Losses 0.5049938226150255

achei cache 0.7966101694915254  individuo =  1 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.7966101694915254

achei cache 0.7966101694915254  individuo =  8 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.7966101694915254

Best epoch: 0 with loss: 0.69 and acc: 46.67%
6515.36 total seconds elapsed. 108.59 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.724138                  0.9      0.792453
TestLoader Losses 0.4626059349058038

Best epoch: 0 with loss: 0.70 and acc: 41.67%
6482.55 total seconds elapsed. 108.04 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712             0.62069                  0.9          0.72
TestLoader Losses 0.5049938226150255

Best epoch: 0 with loss: 0.71 and acc: 45.00%
6472.80 total seconds elapsed. 107.88 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.4518601944891073


@@@@ Reinsercao


 $$$$$$$$ Geração  3
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 8])
  list([1, 0.4801557589296588]) list([1, 9])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([0, 0.4873441372912013]) list([1, 6])
  list([0, 0.2656203414280269]) list([1, 8])
  list([1, 0.013770609136524503]) list([0, 5])
  list([1, 0.5838660227976267])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 11])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 11])
  list([0, 0.14214344101330922]) list([0, 8])
  list([1, 0.4801557589296588]) list([1, 9])
  list([0, 0.40442473397643675])]]
populationFitness =  [0.83050847 0.83050847 0.81355932 0.81355932 0.79661017 0.79661017
 0.79661017 0.76271186 0.76271186 0.74576271]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([4]) list([5]) list([0, 5]) list([1, 0.21081514093783213])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 8]) list([1, 0.4801557589296588])
 list([1, 9]) list([0, 0.40442473397643675])] 0.8305084745762712


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  6 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712

achei cache 0.7966101694915254  individuo =  9 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 8])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.7966101694915254

Best epoch: 0 with loss: 0.71 and acc: 46.67%
6336.32 total seconds elapsed. 126.73 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.864407            0.931034                  0.8      0.870968
TestLoader Losses 0.4517504936557705

achei cache 0.8135593220338984  individuo =  4 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
 list([0, 0.14214344101330922]) list([0, 8]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.8135593220338984

Best epoch: 1 with loss: 0.71 and acc: 46.67%
6341.98 total seconds elapsed. 126.84 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.728814            0.551724                  0.9      0.666667
TestLoader Losses 0.47680306333606526

Best epoch: 1 with loss: 0.70 and acc: 45.00%
6360.12 total seconds elapsed. 127.20 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.965517             0.533333      0.788732
TestLoader Losses 0.5246089030120332

Best epoch: 1 with loss: 0.69 and acc: 46.67%
7179.94 total seconds elapsed. 119.67 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.655172             0.866667      0.730769
TestLoader Losses 0.4625074469437033

Best epoch: 0 with loss: 0.69 and acc: 41.67%
7163.23 total seconds elapsed. 119.39 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.896552                  0.6      0.776119
TestLoader Losses 0.5165897218857781

Best epoch: 0 with loss: 0.71 and acc: 43.33%
7161.60 total seconds elapsed. 119.36 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.689655                  0.9      0.769231
TestLoader Losses 0.5264985945265171

Best epoch: 1 with loss: 0.70 and acc: 45.00%
7170.75 total seconds elapsed. 119.51 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763             0.62069             0.866667      0.705882
TestLoader Losses 0.4665892967733286


@@@@ Reinsercao


 $$$$$$$$ Geração  4
population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 8])
  list([1, 0.4801557589296588]) list([1, 9])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.5961541062045442]) list([0, 10])
  list([0, 0.14214344101330922]) list([0, 8])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.16819452444498245]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 8])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 8])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 12]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]]
populationFitness =  [0.86440678 0.83050847 0.83050847 0.81355932 0.79661017 0.79661017
 0.76271186 0.74576271 0.74576271 0.74576271]
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.864406779661017  individuo =  2 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.8305084745762712  individuo =  6 [list([4]) list([5]) list([0, 5]) list([1, 0.2906663698916296])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 8]) list([1, 0.4801557589296588])
 list([1, 9]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712

Best epoch: 0 with loss: 0.69 and acc: 41.67%
3570.67 total seconds elapsed. 71.41 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.931034             0.666667      0.818182
TestLoader Losses 0.4803918024240914

Best epoch: 1 with loss: 0.70 and acc: 46.67%
3578.66 total seconds elapsed. 71.57 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.931034             0.566667      0.782609
TestLoader Losses 0.4541675885350017

achei cache 0.8305084745762712  individuo =  1 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.2181181631244962]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712

Best epoch: 1 with loss: 0.70 and acc: 45.00%
4170.44 total seconds elapsed. 69.51 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.931034                  0.7      0.830769
TestLoader Losses 0.44606048222315514

achei cache 0.7966101694915254  individuo =  3 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.16819452444498245]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.7966101694915254

achei cache 0.7457627118644068  individuo =  0 [list([4]) list([5]) list([0, 11]) list([1, 0.21081514093783213])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.7457627118644068

achei cache 0.7966101694915254  individuo =  8 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.16819452444498245]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.5686386742184828])
 list([1, 7]) list([0, 0.33641801546166666])] 
 fitness =  0.7966101694915254

achei cache 0.8305084745762712  individuo =  7 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712


@@@@ Reinsercao


 $$$$$$$$ Geração  5
population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.2181181631244962]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.2906663698916296])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 8])
  list([1, 0.4801557589296588]) list([1, 9])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.16819452444498245]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.16819452444498245]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.5686386742184828]) list([1, 7])
  list([0, 0.33641801546166666])]
 [list([4]) list([5]) list([0, 11]) list([1, 0.21081514093783213])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]]
populationFitness =  [0.86440678 0.86440678 0.83050847 0.83050847 0.83050847 0.81355932
 0.79661017 0.79661017 0.79661017 0.74576271]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.8305084745762712  individuo =  3 [list([4]) list([5]) list([0, 5]) list([1, 0.2906663698916296])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 8]) list([1, 0.4801557589296588])
 list([1, 9]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712

achei cache 0.8305084745762712  individuo =  1 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.2181181631244962]) list([0, 6]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712

achei cache 0.864406779661017  individuo =  8 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 1 with loss: 0.68 and acc: 45.00%
3159.42 total seconds elapsed. 63.19 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.46633490465455135

Best epoch: 1 with loss: 0.71 and acc: 41.67%
3749.41 total seconds elapsed. 62.49 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.728814            0.965517                  0.5      0.777778
TestLoader Losses 0.6166881130913556

achei cache 0.864406779661017  individuo =  4 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.8305084745762712  individuo =  6 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.2181181631244962]) list([0, 6]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.8305084745762712

achei cache 0.864406779661017  individuo =  7 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.864406779661017  individuo =  2 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.864406779661017  individuo =  9 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017


@@@@ Reinsercao


 $$$$$$$$ Geração  6
population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.2181181631244962]) list([0, 6])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.2906663698916296])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 8])
  list([1, 0.4801557589296588]) list([1, 9])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.2181181631244962]) list([0, 6])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.2906663698916296])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 8])
  list([1, 0.4801557589296588]) list([0, 7])
  list([0, 0.33641801546166666])]]
populationFitness =  [0.86440678 0.86440678 0.86440678 0.86440678 0.86440678 0.86440678
 0.83050847 0.83050847 0.83050847 0.77966102]

multiplos individiduos com maxValue =  6
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.864406779661017  individuo =  4 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.864406779661017  individuo =  2 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 1 with loss: 0.70 and acc: 38.33%
4899.74 total seconds elapsed. 97.99 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.47583707914514056

Best epoch: 1 with loss: 0.70 and acc: 38.33%
4888.51 total seconds elapsed. 97.77 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.47583707914514056

Best epoch: 43 with loss: 0.69 and acc: 50.00%
4912.85 total seconds elapsed. 98.26 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6974454653465142

Best epoch: 1 with loss: 0.70 and acc: 46.67%
5498.65 total seconds elapsed. 91.64 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.4184393584728241

achei cache 0.864406779661017  individuo =  7 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 3])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.864406779661017  individuo =  5 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.2181181631244962]) list([0, 6]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

achei cache 0.864406779661017  individuo =  1 [list([4]) list([5]) list([0, 4]) list([0, 0.10543911198345594])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 2 with loss: 0.69 and acc: 43.33%
4917.28 total seconds elapsed. 98.35 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.44584136039523753


@@@@ Reinsercao


 $$$$$$$$ Geração  7
population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.10543911198345594])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.2181181631244962]) list([0, 6])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 3])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.4801557589296588]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([6]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.2906663698916296])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]]
populationFitness =  [0.86440678 0.86440678 0.86440678 0.86440678 0.86440678 0.86440678
 0.83050847 0.79661017 0.77966102 0.77966102]

multiplos individiduos com maxValue =  6
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.4801557589296588])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7301.83 total seconds elapsed. 146.04 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

achei cache 0.864406779661017  individuo =  9 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7302.27 total seconds elapsed. 146.05 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7302.98 total seconds elapsed. 146.06 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

achei cache 0.864406779661017  individuo =  6 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7304.45 total seconds elapsed. 146.09 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7307.69 total seconds elapsed. 146.15 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7313.20 total seconds elapsed. 146.26 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7305.50 total seconds elapsed. 146.11 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478

Best epoch: 2 with loss: 0.70 and acc: 46.67%
7310.32 total seconds elapsed. 146.21 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.847458            0.862069             0.833333      0.847458
TestLoader Losses 0.4326981063616478


@@@@ Reinsercao


 $$$$$$$$ Geração  8
population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.10543911198345594])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 8])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]]
populationFitness =  [0.86440678 0.86440678 0.86440678 0.84745763 0.84745763 0.84745763
 0.84745763 0.84745763 0.84745763 0.84745763]

multiplos individiduos com maxValue =  3
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.847457627118644  individuo =  2 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.37789213534496996])
 list([1, 4]) list([1, 0.4670323845193844])] 
 fitness =  0.847457627118644

achei cache 0.7796610169491526  individuo =  8 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([1, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.7796610169491526

achei cache 0.7966101694915254  individuo =  9 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([1, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.7966101694915254

Best epoch: 1 with loss: 0.71 and acc: 46.67%
5265.82 total seconds elapsed. 105.32 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.724138             0.866667      0.777778
TestLoader Losses 0.45606925982539936

achei cache 0.7966101694915254  individuo =  5 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([1, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.7966101694915254

Best epoch: 1 with loss: 0.71 and acc: 46.67%
5273.71 total seconds elapsed. 105.47 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.724138             0.866667      0.777778
TestLoader Losses 0.45606925982539936

Best epoch: 1 with loss: 0.71 and acc: 46.67%
5275.67 total seconds elapsed. 105.51 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.724138             0.866667      0.777778
TestLoader Losses 0.45606925982539936

achei cache 0.864406779661017  individuo =  7 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 31 with loss: 0.69 and acc: 48.33%
5289.34 total seconds elapsed. 105.79 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.896552             0.766667       0.83871
TestLoader Losses 0.5042283817873163

Best epoch: 1 with loss: 0.71 and acc: 46.67%
5274.00 total seconds elapsed. 105.48 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.724138             0.866667      0.777778
TestLoader Losses 0.45606925982539936


@@@@ Reinsercao


 $$$$$$$$ Geração  9
population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([3]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 10])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 10])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 10])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 10])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 10])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]]
populationFitness =  [0.86440678 0.86440678 0.84745763 0.83050847 0.79661017 0.79661017
 0.79661017 0.79661017 0.79661017 0.79661017]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017


@@@@ Selecao


@@@@ Crossover


@@@@ Mutacao


@@@@ Calculando fitness

achei cache 0.864406779661017  individuo =  0 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017

Best epoch: 6 with loss: 0.69 and acc: 48.33%
5421.39 total seconds elapsed. 135.53 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.827586             0.766667           0.8
TestLoader Losses 0.44082111372786054

Best epoch: 0 with loss: 0.71 and acc: 43.33%
6514.26 total seconds elapsed. 130.29 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.49374442585444045

Best epoch: 12 with loss: 0.69 and acc: 45.00%
6507.21 total seconds elapsed. 130.14 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.827586                  0.7      0.774194
TestLoader Losses 0.6543357382386418

Best epoch: 0 with loss: 0.71 and acc: 43.33%
6518.49 total seconds elapsed. 130.37 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.49374442585444045

Best epoch: 0 with loss: 0.71 and acc: 43.33%
6516.03 total seconds elapsed. 130.32 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.49374442585444045

achei cache 0.847457627118644  individuo =  3 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.37789213534496996])
 list([1, 4]) list([1, 0.4670323845193844])] 
 fitness =  0.847457627118644

Best epoch: 0 with loss: 0.71 and acc: 43.33%
6519.68 total seconds elapsed. 130.39 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.827586             0.733333      0.786885
TestLoader Losses 0.49374442585444045

achei cache 0.7966101694915254  individuo =  1 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([1, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.7966101694915254

achei cache 0.864406779661017  individuo =  8 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 
 fitness =  0.864406779661017


@@@@ Reinsercao

Final population

population =  [[list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([1, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 7]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([1, 3])
  list([0, 0.2610324936188016]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([3]) list([4]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([1, 4])
  list([0, 0.40442473397643675])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([0, 10])
  list([0, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.2610324936188016]) list([0, 10])
  list([0, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([0, 10])
  list([0, 0.4670323845193844])]
 [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
  list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
  list([0, 0.3086506428351569]) list([0, 3])
  list([0, 0.37789213534496996]) list([0, 10])
  list([0, 0.4670323845193844])]]
populationFitness =  [0.86440678 0.86440678 0.86440678 0.84745763 0.79661017 0.79661017
 0.77966102 0.77966102 0.77966102 0.77966102]

multiplos individiduos com maxValue =  3
bestParent, bestParentFitness [list([4]) list([5]) list([0, 4]) list([0, 0.12482722722921126])
 list([1, 10]) list([1, 0.37579907778154803]) list([0, 10])
 list([0, 0.3086506428351569]) list([0, 3]) list([0, 0.2610324936188016])
 list([1, 4]) list([0, 0.40442473397643675])] 0.864406779661017
