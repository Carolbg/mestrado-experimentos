tp, tour, tr, numberIterations, tm, isNumpy 10 2 80 10 20 True
isNumpy True
Load dataset
Lidando com numpy data
shuffleSeed 1
n_epochs 30 max_epochs_stop 10
device =  cpu

PrepareDataFromNumpy arrays
getFilesName
Imagens_numpy_array_allData_entireDatabase_MinMax_extrapolandoLimites
readFilesByPatient saudaveis
readFilesByPatient doentes

Split Healthy Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0189', 'T0196', 'T0193', 'T0220', 'T0199', 'T0217', 'T0188', 'T0224', 'T0216', 'T0211', 'T0259', 'T0194', 'T0200', 'T0239', 'T0236', 'T0272', 'T0201', 'T0226', 'T0195', 'T0221', 'T0238', 'T0237', 'T0234', 'T0275', 'T0222', 'T0261']
validationPatients ['T0243', 'T0276', 'T0191', 'T0219', 'T0244', 'T0212']
testPatients ['T0218', 'T0233', 'T0208', 'T0190', 'T0225', 'T0177']
imagens do trainDataset 128
imagens do testDataset 30
imagens do validationDataset 30
train (128, 3, 224, 224)
test (30, 3, 224, 224)
validation (30, 3, 224, 224)

Split Cancer Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0267', 'T0255', 'T0138', 'T0286', 'T0198', 'T0246', 'T0192', 'T0258', 'T0202', 'T0209', 'T0241', 'T0179', 'T0287', 'T0213', 'T0203', 'T0210', 'T0240', 'T0270', 'T0180', 'T0264', 'T0269', 'T0282', 'T0281', 'T0277', 'T0273', 'T0256']
validationPatients ['T0266', 'T0245', 'T0263', 'T0260', 'T0181', 'T0204']
testPatients ['T0257', 'T0278', 'T0285', 'T0268', 'T0283', 'T0271']
imagens do trainDataset 129
imagens do testDataset 29
imagens do validationDataset 30
train (129, 3, 224, 224)
test (29, 3, 224, 224)
validation (30, 3, 224, 224)

Total de dados para treinamento 257

Total de dados para teste 59

Total de dados para validacao 60
prepareNumpyDatasetBalancedData
Sem aumento de dados
com testValidationTransform Compose(
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
   category  Treinamento  Validação  Teste
0  Saudável          128         30     30
1    Doente          129         30     29


@@@@ Init pop
value =  1
value =  2
value =  3
value =  5
value =  5
value =  2
value =  6
value =  4
value =  5
value =  3
value =  5
value =  5
value =  4
value =  3
value =  4
value =  3
value =  6
value =  3
value =  3
value =  4


@@@@ Calculando fitness
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Linear(in_features=2048, out_features=32, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.5587390595421261, inplace=False)
  (9): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
6374.12 total seconds elapsed. 212.47 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.793103                  0.8      0.793103
TestLoader Losses 0.48456423262418324
@@@@ individuo =  6 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=256, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.4975143636486923, inplace=False)
  (3): Linear(in_features=256, out_features=4096, bias=True)
  (4): ReLU()
  (5): Linear(in_features=4096, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 41.67%
6377.75 total seconds elapsed. 212.59 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.728814            0.827586             0.633333          0.75
TestLoader Losses 0.5997845692149664
@@@@ individuo =  4 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
 list([1, 0.03303980663375814]) list([0, 9]) list([0, 0.5643012659047291])
 list([1, 12]) list([0, 0.44236420837673307])] 
 fitness =  0.7288135593220338
verifyEntry ([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=2048, bias=True)
  (1): ReLU()
  (2): Linear(in_features=2048, out_features=8, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.20299273484602326, inplace=False)
  (5): Linear(in_features=8, out_features=2, bias=True)
)

Best epoch: 5 with loss: 0.71 and acc: 50.00%
6421.75 total seconds elapsed. 214.06 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6141623319205591
@@@@ individuo =  7 [list([4]) list([3]) list([1, 11]) list([0, 0.007160851724901751])
 list([1, 3]) list([1, 0.20299273484602326]) list([0, 10])
 list([0, 0.00898805221516845]) list([0, 10])
 list([0, 0.16401540835810516]) list([0, 8])
 list([1, 0.03838953587015354])] 
 fitness =  0.5084745762711864
verifyEntry ([5], [2], [1, 10], [1, 9])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=512, bias=True)
  (3): ReLU()
  (4): Linear(in_features=512, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 46.67%
4190.78 total seconds elapsed. 209.54 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.965517             0.566667           0.8
TestLoader Losses 0.5498969342748997
@@@@ individuo =  2 [list([5]) list([2]) list([0, 3]) list([1, 0.4645113959497605])
 list([0, 10]) list([0, 0.4569616141275561]) list([1, 10])
 list([0, 0.09000291127504098]) list([0, 10])
 list([1, 0.39792452949046747]) list([1, 9])
 list([0, 0.42011381338695664])] 
 fitness =  0.7627118644067796
verifyEntry ([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=8, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.3136017038996565, inplace=False)
  (3): Linear(in_features=8, out_features=2048, bias=True)
  (4): ReLU()
  (5): Linear(in_features=2048, out_features=16, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.2926349405641228, inplace=False)
  (8): Linear(in_features=16, out_features=2, bias=True)
)

Best epoch: 26 with loss: 0.70 and acc: 50.00%
4645.53 total seconds elapsed. 154.85 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6939679192284406
@@@@ individuo =  8 [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
 list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
 list([0, 0.0002961412471871538]) list([1, 4])
 list([1, 0.2926349405641228]) list([0, 6]) list([1, 0.3194398548764135])] 
 fitness =  0.5084745762711864
verifyEntry ([6], [4])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 33 with loss: 0.72 and acc: 33.33%
7857.66 total seconds elapsed. 196.44 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.440678            0.275862                  0.6      0.326531
TestLoader Losses 0.701529151302273
@@@@ individuo =  3 [list([6]) list([4]) list([0, 5]) list([1, 0.5519279475092509])
 list([0, 9]) list([0, 0.5423187452430912]) list([0, 12])
 list([1, 0.10438665985210822]) list([0, 12])
 list([1, 0.3397429031942679]) list([0, 12]) list([0, 0.389716023108639])] 
 fitness =  0.4406779661016949
verifyEntry ([1], [2], [1, 10], [1, 12])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=4096, bias=True)
  (3): ReLU()
  (4): Linear(in_features=4096, out_features=2, bias=True)
)

Best epoch: 7 with loss: 0.69 and acc: 50.00%
4223.83 total seconds elapsed. 211.19 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 4.863682617575435
@@@@ individuo =  0 [list([1]) list([2]) list([0, 4]) list([1, 0.10456309992910308])
 list([0, 10]) list([1, 0.588807893709759]) list([1, 10])
 list([0, 0.15823117710409954]) list([0, 12])
 list([0, 0.4181615240870981]) list([1, 12]) list([0, 0.5349592964477426])] 
 fitness =  0.4915254237288136
verifyEntry ([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=8, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5335954798523798, inplace=False)
  (3): Linear(in_features=8, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.2096445574084042, inplace=False)
  (6): Linear(in_features=1024, out_features=4096, bias=True)
  (7): ReLU()
  (8): Linear(in_features=4096, out_features=2, bias=True)
)

Best epoch: 8 with loss: 0.69 and acc: 50.00%
5293.75 total seconds elapsed. 132.34 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6932842872910581
@@@@ individuo =  9 [list([3]) list([4]) list([1, 3]) list([1, 0.5335954798523798])
 list([0, 12]) list([0, 0.4617671736680206]) list([1, 10])
 list([1, 0.2096445574084042]) list([1, 12]) list([0, 0.373226428495102])
 list([0, 11]) list([1, 0.5577672417046778])] 
 fitness =  0.4915254237288136
verifyEntry ([5], [5], [1, 10], [1, 0.11905579645782233])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.11905579645782233, inplace=False)
  (3): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 43.33%
8840.41 total seconds elapsed. 176.81 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.862069             0.633333      0.769231
TestLoader Losses 0.5239943740731579
@@@@ individuo =  5 [list([5]) list([5]) list([0, 8]) list([1, 0.4432778846235407])
 list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
 list([1, 0.5050267284584113]) list([0, 12])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])] 
 fitness =  0.7457627118644068
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 2 with loss: 0.71 and acc: 45.00%
9063.80 total seconds elapsed. 181.28 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.931034             0.666667      0.818182
TestLoader Losses 0.4644813113293405
@@@@ individuo =  1 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
result (0, 0.4915254237288136)
result (1, 0.7966101694915254)
result (2, 0.7627118644067796)
result (3, 0.4406779661016949)
result (4, 0.7288135593220338)
result (5, 0.7457627118644068)
result (6, 0.7966101694915254)
result (7, 0.5084745762711864)
result (8, 0.5084745762711864)
result (9, 0.4915254237288136)

individuo [list([1]) list([2]) list([0, 4]) list([1, 0.10456309992910308])
 list([0, 10]) list([1, 0.588807893709759]) list([1, 10])
 list([0, 0.15823117710409954]) list([0, 12])
 list([0, 0.4181615240870981]) list([1, 12]) list([0, 0.5349592964477426])]  key  ([1], [2], [1, 10], [1, 12]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([2]) list([0, 3]) list([1, 0.4645113959497605])
 list([0, 10]) list([0, 0.4569616141275561]) list([1, 10])
 list([0, 0.09000291127504098]) list([0, 10])
 list([1, 0.39792452949046747]) list([1, 9])
 list([0, 0.42011381338695664])]  key  ([5], [2], [1, 10], [1, 9]) 


individuo [list([6]) list([4]) list([0, 5]) list([1, 0.5519279475092509])
 list([0, 9]) list([0, 0.5423187452430912]) list([0, 12])
 list([1, 0.10438665985210822]) list([0, 12])
 list([1, 0.3397429031942679]) list([0, 12]) list([0, 0.389716023108639])]  key  ([6], [4]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
 list([1, 0.03303980663375814]) list([0, 9]) list([0, 0.5643012659047291])
 list([1, 12]) list([0, 0.44236420837673307])]  key  ([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12]) 


individuo [list([5]) list([5]) list([0, 8]) list([1, 0.4432778846235407])
 list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
 list([1, 0.5050267284584113]) list([0, 12])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])]  key  ([5], [5], [1, 10], [1, 0.11905579645782233]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 11]) list([0, 0.007160851724901751])
 list([1, 3]) list([1, 0.20299273484602326]) list([0, 10])
 list([0, 0.00898805221516845]) list([0, 10])
 list([0, 0.16401540835810516]) list([0, 8])
 list([1, 0.03838953587015354])]  key  ([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326]) 


individuo [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
 list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
 list([0, 0.0002961412471871538]) list([1, 4])
 list([1, 0.2926349405641228]) list([0, 6]) list([1, 0.3194398548764135])]  key  ([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228]) 


individuo [list([3]) list([4]) list([1, 3]) list([1, 0.5335954798523798])
 list([0, 12]) list([0, 0.4617671736680206]) list([1, 10])
 list([1, 0.2096445574084042]) list([1, 12]) list([0, 0.373226428495102])
 list([0, 11]) list([1, 0.5577672417046778])]  key  ([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12]) 


cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136}


 $$$$$$$$ Geração  0
population =  [[list([1]) list([2]) list([0, 4]) list([1, 0.10456309992910308])
  list([0, 10]) list([1, 0.588807893709759]) list([1, 10])
  list([0, 0.15823117710409954]) list([0, 12])
  list([0, 0.4181615240870981]) list([1, 12])
  list([0, 0.5349592964477426])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([2]) list([0, 3]) list([1, 0.4645113959497605])
  list([0, 10]) list([0, 0.4569616141275561]) list([1, 10])
  list([0, 0.09000291127504098]) list([0, 10])
  list([1, 0.39792452949046747]) list([1, 9])
  list([0, 0.42011381338695664])]
 [list([6]) list([4]) list([0, 5]) list([1, 0.5519279475092509])
  list([0, 9]) list([0, 0.5423187452430912]) list([0, 12])
  list([1, 0.10438665985210822]) list([0, 12])
  list([1, 0.3397429031942679]) list([0, 12])
  list([0, 0.389716023108639])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
  list([1, 0.03303980663375814]) list([0, 9])
  list([0, 0.5643012659047291]) list([1, 12])
  list([0, 0.44236420837673307])]
 [list([5]) list([5]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 11]) list([0, 0.007160851724901751])
  list([1, 3]) list([1, 0.20299273484602326]) list([0, 10])
  list([0, 0.00898805221516845]) list([0, 10])
  list([0, 0.16401540835810516]) list([0, 8])
  list([1, 0.03838953587015354])]
 [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
  list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
  list([0, 0.0002961412471871538]) list([1, 4])
  list([1, 0.2926349405641228]) list([0, 6])
  list([1, 0.3194398548764135])]
 [list([3]) list([4]) list([1, 3]) list([1, 0.5335954798523798])
  list([0, 12]) list([0, 0.4617671736680206]) list([1, 10])
  list([1, 0.2096445574084042]) list([1, 12])
  list([0, 0.373226428495102]) list([0, 11])
  list([1, 0.5577672417046778])]]
populationFitness =  [0.49152542 0.79661017 0.76271186 0.44067797 0.72881356 0.74576271
 0.79661017 0.50847458 0.50847458 0.49152542]
bestParent, bestParentFitness [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.7966101694915254


@@@@ Selecao
indexParent 5
indexParent 6
indexParent 4
indexParent 1
indexParent 6
indexParent 6
indexParent 6
indexParent 6
indexParent 1
indexParent 8


@@@@ Crossover
crossoverPoint 2
crossoverPoint 4
crossoverPoint 5
not changing individuals
not changing individuals


@@@@ Mutacao
Individuos para mutacao [6, 2]
@@@ mutated [0, 0.03303980663375814]
@@@ mutated [1, 12]


@@@@ Calculando fitness
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7966101694915254  individuo =  3 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7966101694915254  individuo =  8 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7966101694915254  individuo =  7 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 10], [1, 0.11905579645782233])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.11905579645782233, inplace=False)
  (3): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.74 and acc: 43.33%
2994.93 total seconds elapsed. 99.83 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.862069             0.733333      0.806452
TestLoader Losses 0.46482534075187426
@@@@ individuo =  5 [list([4]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
 list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
 list([1, 0.5050267284584113]) list([0, 12])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [3], [1, 10], [1, 0.3079894785442912])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.3079894785442912, inplace=False)
  (3): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 41.67%
2988.31 total seconds elapsed. 99.61 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.5476269863419614
@@@@ individuo =  1 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7796610169491526
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  4 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])

achei cache 0.5084745762711864  individuo =  9 [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
 list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
 list([0, 0.0002961412471871538]) list([1, 4])
 list([1, 0.2926349405641228]) list([0, 6]) list([1, 0.3194398548764135])] 
 fitness =  0.5084745762711864
verifyEntry ([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=4096, bias=True)
  (3): ReLU()
  (4): Linear(in_features=4096, out_features=256, bias=True)
  (5): ReLU()
  (6): Linear(in_features=256, out_features=2048, bias=True)
  (7): ReLU()
  (8): Linear(in_features=2048, out_features=32, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.5587390595421261, inplace=False)
  (11): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
3022.27 total seconds elapsed. 100.74 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.965517             0.533333      0.788732
TestLoader Losses 0.5425566965240544
@@@@ individuo =  2 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7457627118644068
verifyEntry ([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Linear(in_features=2048, out_features=32, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.5587390595421261, inplace=False)
  (9): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 12 with loss: 0.69 and acc: 43.33%
4268.72 total seconds elapsed. 85.37 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.896552                  0.6      0.776119
TestLoader Losses 0.573998809871027
@@@@ individuo =  0 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7457627118644068
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=256, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.4975143636486923, inplace=False)
  (6): Linear(in_features=256, out_features=4096, bias=True)
  (7): ReLU()
  (8): Linear(in_features=4096, out_features=2, bias=True)
)

Best epoch: 26 with loss: 0.69 and acc: 50.00%
4370.46 total seconds elapsed. 87.41 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6931287120964568
@@@@ individuo =  6 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
 list([0, 0.03303980663375814]) list([0, 9]) list([0, 0.5643012659047291])
 list([1, 12]) list([0, 0.44236420837673307])] 
 fitness =  0.5084745762711864
result (0, 0.7457627118644068)
result (1, 0.7796610169491526)
result (2, 0.7457627118644068)
result (3, 0.7966101694915254)
result (4, 0.7966101694915254)
result (5, 0.7966101694915254)
result (6, 0.5084745762711864)
result (7, 0.7966101694915254)
result (8, 0.7966101694915254)
result (9, 0.5084745762711864)


 Saving new generated items of geração  0

individuo [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [3], [1, 10], [1, 0.3079894785442912]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([4]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
 list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
 list([1, 0.5050267284584113]) list([0, 12])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])]  key  ([4], [3], [1, 10], [1, 0.11905579645782233]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
 list([0, 0.03303980663375814]) list([0, 9]) list([0, 0.5643012659047291])
 list([1, 12]) list([0, 0.44236420837673307])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
 list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
 list([0, 0.0002961412471871538]) list([1, 4])
 list([1, 0.2926349405641228]) list([0, 6]) list([1, 0.3194398548764135])]  key  ([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.7966101694915254
 childPopulation, childrenFitness [[list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
  list([0, 0.03303980663375814]) list([0, 9])
  list([0, 0.5643012659047291]) list([1, 12])
  list([0, 0.44236420837673307])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
  list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
  list([0, 0.0002961412471871538]) list([1, 4])
  list([1, 0.2926349405641228]) list([0, 6])
  list([1, 0.3194398548764135])]] [0.74576271 0.77966102 0.74576271 0.79661017 0.79661017 0.79661017
 0.50847458 0.79661017 0.79661017 0.50847458]
tp 10
allPopulation [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
  list([0, 0.03303980663375814]) list([0, 9])
  list([0, 0.5643012659047291]) list([1, 12])
  list([0, 0.44236420837673307])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
  list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
  list([0, 0.0002961412471871538]) list([1, 4])
  list([1, 0.2926349405641228]) list([0, 6])
  list([1, 0.3194398548764135])]]
allFitness [0.79661017 0.74576271 0.77966102 0.74576271 0.79661017 0.79661017
 0.79661017 0.50847458 0.79661017 0.79661017 0.50847458]
sortedPopulation, sortedFitness [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
  list([0, 0.03303980663375814]) list([0, 9])
  list([0, 0.5643012659047291]) list([1, 12])
  list([0, 0.44236420837673307])]
 [list([6]) list([3]) list([0, 4]) list([1, 0.3227647116797088])
  list([1, 3]) list([1, 0.3136017038996565]) list([1, 11])
  list([0, 0.0002961412471871538]) list([1, 4])
  list([1, 0.2926349405641228]) list([0, 6])
  list([1, 0.3194398548764135])]] [0.79661017 0.79661017 0.79661017 0.79661017 0.79661017 0.79661017
 0.77966102 0.74576271 0.74576271 0.50847458 0.50847458]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864}


 $$$$$$$$ Geração  1
population =  [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 8]) list([1, 0.4975143636486923]) list([0, 10])
  list([0, 0.03303980663375814]) list([0, 9])
  list([0, 0.5643012659047291]) list([1, 12])
  list([0, 0.44236420837673307])]]
populationFitness =  [0.79661017 0.79661017 0.79661017 0.79661017 0.79661017 0.79661017
 0.77966102 0.74576271 0.74576271 0.50847458]
bestParent, bestParentFitness [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.7966101694915254


@@@@ Selecao
indexParent 2
indexParent 0
indexParent 4
indexParent 6
indexParent 7
indexParent 4
indexParent 3
indexParent 8
indexParent 0
indexParent 1


@@@@ Crossover
crossoverPoint 3
crossoverPoint 5
not changing individuals
crossoverPoint 9
crossoverPoint 7


@@@@ Mutacao
Individuos para mutacao [3, 2]
@@@ mutated [5]
@@@ mutated [0, 0.2273043794096544]


@@@@ Calculando fitness
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  0 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=4096, bias=True)
  (3): ReLU()
  (4): Linear(in_features=4096, out_features=256, bias=True)
  (5): ReLU()
  (6): Linear(in_features=256, out_features=2048, bias=True)
  (7): ReLU()
  (8): Linear(in_features=2048, out_features=1024, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11905579645782233, inplace=False)
  (11): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
3525.56 total seconds elapsed. 117.52 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.793103                  0.8      0.793103
TestLoader Losses 0.6093780458983729
@@@@ individuo =  8 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  5 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7457627118644068  individuo =  2 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.2273043794096544]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7457627118644068
verifyEntry ([4], [3], [1, 5], [1, 8])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
3527.22 total seconds elapsed. 117.57 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.694915            0.965517             0.433333      0.756757
TestLoader Losses 0.5657277430518198
@@@@ individuo =  9 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.6949152542372882
verifyEntry ([4], [3], [1, 5])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
3526.77 total seconds elapsed. 117.56 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.689655             0.866667      0.754717
TestLoader Losses 0.4844426967329898
@@@@ individuo =  1 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Linear(in_features=2048, out_features=32, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.5587390595421261, inplace=False)
  (9): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 41.67%
3549.79 total seconds elapsed. 118.33 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.689655             0.833333      0.740741
TestLoader Losses 0.526695448463246
@@@@ individuo =  6 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7627118644067796
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7966101694915254  individuo =  7 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [3], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5587390595421261, inplace=False)
  (3): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 5 with loss: 0.68 and acc: 53.33%
3528.05 total seconds elapsed. 117.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.644068            0.827586             0.466667      0.695652
TestLoader Losses 0.6559856917898533
@@@@ individuo =  3 [list([5]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
 list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
 list([1, 0.5050267284584113]) list([0, 12]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.6440677966101694
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=2048, bias=True)
  (7): ReLU()
  (8): Linear(in_features=2048, out_features=32, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.5587390595421261, inplace=False)
  (11): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 42 with loss: 0.69 and acc: 50.00%
4939.67 total seconds elapsed. 98.79 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6932190171742844
@@@@ individuo =  4 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.4915254237288136
result (0, 0.7966101694915254)
result (1, 0.7796610169491526)
result (2, 0.7457627118644068)
result (3, 0.6440677966101694)
result (4, 0.4915254237288136)
result (5, 0.7966101694915254)
result (6, 0.7627118644067796)
result (7, 0.7966101694915254)
result (8, 0.7966101694915254)
result (9, 0.6949152542372882)


 Saving new generated items of geração  1

individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5]) 


individuo [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.2273043794096544]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([5]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
 list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
 list([1, 0.5050267284584113]) list([0, 12]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [3], [1, 5], [1, 0.5587390595421261]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])]  key  ([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.7966101694915254
 childPopulation, childrenFitness [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.2273043794096544]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]] [0.79661017 0.77966102 0.74576271 0.6440678  0.49152542 0.79661017
 0.76271186 0.79661017 0.79661017 0.69491525]
tp 10
allPopulation [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.2273043794096544]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.79661017 0.79661017 0.77966102 0.74576271 0.6440678  0.49152542
 0.79661017 0.76271186 0.79661017 0.79661017 0.69491525]
sortedPopulation, sortedFitness [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.2273043794096544]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]] [0.79661017 0.79661017 0.79661017 0.79661017 0.79661017 0.77966102
 0.76271186 0.74576271 0.69491525 0.6440678  0.49152542]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882}


 $$$$$$$$ Geração  2
population =  [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.2273043794096544]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 8]) list([1, 0.4432778846235407])
  list([0, 5]) list([1, 0.467653908843625]) list([0, 11])
  list([1, 0.5050267284584113]) list([0, 12])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]]
populationFitness =  [0.79661017 0.79661017 0.79661017 0.79661017 0.79661017 0.77966102
 0.76271186 0.74576271 0.69491525 0.6440678 ]
bestParent, bestParentFitness [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.7966101694915254


@@@@ Selecao
indexParent 2
indexParent 4
indexParent 1
indexParent 0
indexParent 6
indexParent 3
indexParent 3
indexParent 5
indexParent 6
indexParent 6


@@@@ Crossover
crossoverPoint 7
crossoverPoint 9
crossoverPoint 10
crossoverPoint 9
crossoverPoint 3


@@@@ Mutacao
Individuos para mutacao [9, 0]
@@@ mutated [0, 8]
@@@ mutated [1, 6]


@@@@ Calculando fitness
verifyEntry ([4], [3], [1, 5], [1, 12], [1, 8])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=4096, bias=True)
  (3): ReLU()
  (4): Linear(in_features=4096, out_features=256, bias=True)
  (5): ReLU()
  (6): Linear(in_features=256, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 43.33%
3549.24 total seconds elapsed. 118.31 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.49568652601565344
@@@@ individuo =  5 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Linear(in_features=2048, out_features=32, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5587390595421261, inplace=False)
  (7): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 41.67%
3535.86 total seconds elapsed. 117.86 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.543340401124146
@@@@ individuo =  4 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7627118644067796  individuo =  2 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Linear(in_features=2048, out_features=32, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5587390595421261, inplace=False)
  (7): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 41.67%
3544.84 total seconds elapsed. 118.16 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.862069                  0.7      0.793651
TestLoader Losses 0.543340401124146
@@@@ individuo =  9 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7796610169491526
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  1 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=32, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.5587390595421261, inplace=False)
  (5): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 41.67%
3542.46 total seconds elapsed. 118.08 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.827586                  0.7      0.774194
TestLoader Losses 0.5551385485519797
@@@@ individuo =  8 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([0, 0.2100706764372174]) list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7627118644067796
verifyEntry ([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=64, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=64, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=2048, bias=True)
  (7): ReLU()
  (8): Linear(in_features=2048, out_features=1024, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11905579645782233, inplace=False)
  (11): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 14 with loss: 0.69 and acc: 50.00%
4769.07 total seconds elapsed. 95.38 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6931913757728319
@@@@ individuo =  0 [list([3]) list([5]) list([1, 6]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.2660215326196901]) list([1, 11])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])] 
 fitness =  0.4915254237288136
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.4591098062076323, inplace=False)
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 46.67%
3554.01 total seconds elapsed. 118.47 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.758621             0.866667           0.8
TestLoader Losses 0.41981793207637336
@@@@ individuo =  3 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  6 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])

achei cache 0.7966101694915254  individuo =  7 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
result (0, 0.4915254237288136)
result (1, 0.7966101694915254)
result (2, 0.7627118644067796)
result (3, 0.8135593220338984)
result (4, 0.7796610169491526)
result (5, 0.7796610169491526)
result (6, 0.7966101694915254)
result (7, 0.7966101694915254)
result (8, 0.7627118644067796)
result (9, 0.7796610169491526)


 Saving new generated items of geração  2

individuo [list([3]) list([5]) list([1, 6]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.2660215326196901]) list([1, 11])
 list([0, 0.41038434974481214]) list([1, 10])
 list([1, 0.11905579645782233])]  key  ([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 12], [1, 8]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([0, 0.2100706764372174]) list([1, 5]) list([1, 0.5587390595421261])]  key  ([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.7966101694915254
 childPopulation, childrenFitness [[list([3]) list([5]) list([1, 6]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]] [0.49152542 0.79661017 0.76271186 0.81355932 0.77966102 0.77966102
 0.79661017 0.79661017 0.76271186 0.77966102]
tp 10
allPopulation [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 6]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]]
allFitness [0.79661017 0.49152542 0.79661017 0.76271186 0.81355932 0.77966102
 0.77966102 0.79661017 0.79661017 0.76271186 0.77966102]
sortedPopulation, sortedFitness [[list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 6]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.41038434974481214]) list([1, 10])
  list([1, 0.11905579645782233])]] [0.81355932 0.79661017 0.79661017 0.79661017 0.79661017 0.77966102
 0.77966102 0.77966102 0.76271186 0.76271186 0.49152542]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796}


 $$$$$$$$ Geração  3
population =  [[list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]]
populationFitness =  [0.81355932 0.79661017 0.79661017 0.79661017 0.79661017 0.77966102
 0.77966102 0.77966102 0.76271186 0.76271186]
bestParent, bestParentFitness [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 0.8135593220338984


@@@@ Selecao
indexParent 3
indexParent 5
indexParent 2
indexParent 7
indexParent 0
indexParent 1
indexParent 2
indexParent 1
indexParent 1
indexParent 3


@@@@ Crossover
crossoverPoint 5
crossoverPoint 1
not changing individuals
not changing individuals
crossoverPoint 8


@@@@ Mutacao
Individuos para mutacao [2, 7]
@@@ mutated [1, 0.5002292586634226]
@@@ mutated [1, 6]


@@@@ Calculando fitness
verifyEntry ([5], [3], [1, 10], [1, 0.3079894785442912])

achei cache 0.7796610169491526  individuo =  5 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7796610169491526
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  3 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  9 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=1024, bias=True)
  (1): ReLU()
  (2): Linear(in_features=1024, out_features=2048, bias=True)
  (3): ReLU()
  (4): Linear(in_features=2048, out_features=32, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.5587390595421261, inplace=False)
  (7): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 48.33%
2535.84 total seconds elapsed. 84.53 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.758621             0.833333      0.785714
TestLoader Losses 0.45848861185170836
@@@@ individuo =  1 [list([3]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.7966101694915254
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  4 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 45.00%
4117.10 total seconds elapsed. 82.34 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.44247317112098306
@@@@ individuo =  6 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Linear(in_features=1024, out_features=2048, bias=True)
  (6): ReLU()
  (7): Linear(in_features=2048, out_features=32, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.5587390595421261, inplace=False)
  (10): Linear(in_features=32, out_features=2, bias=True)
)

Best epoch: 49 with loss: 0.69 and acc: 50.00%
4280.37 total seconds elapsed. 85.61 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6931642526287144
@@@@ individuo =  0 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])] 
 fitness =  0.4915254237288136
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=64, bias=True)
  (7): ReLU()
  (8): Linear(in_features=64, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 46.67%
4218.86 total seconds elapsed. 84.38 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.758621             0.833333      0.785714
TestLoader Losses 0.46038129976240255
@@@@ individuo =  7 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  2 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.7966101694915254  individuo =  8 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
result (0, 0.4915254237288136)
result (1, 0.7966101694915254)
result (2, 0.8135593220338984)
result (3, 0.7966101694915254)
result (4, 0.7966101694915254)
result (5, 0.7796610169491526)
result (6, 0.8305084745762712)
result (7, 0.7966101694915254)
result (8, 0.7966101694915254)
result (9, 0.7966101694915254)


 Saving new generated items of geração  3

individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([3]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([0, 0.2100706764372174])
 list([1, 5]) list([1, 0.5587390595421261])]  key  ([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [3], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 0.8135593220338984
 childPopulation, childrenFitness [[list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]] [0.49152542 0.79661017 0.81355932 0.79661017 0.79661017 0.77966102
 0.83050847 0.79661017 0.79661017 0.79661017]
tp 10
allPopulation [[list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.81355932 0.49152542 0.79661017 0.81355932 0.79661017 0.79661017
 0.77966102 0.83050847 0.79661017 0.79661017 0.79661017]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]] [0.83050847 0.81355932 0.81355932 0.79661017 0.79661017 0.79661017
 0.79661017 0.79661017 0.79661017 0.77966102 0.49152542]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254}


 $$$$$$$$ Geração  4
population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([0, 0.5002292586634226]) list([0, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([0, 0.2100706764372174]) list([1, 5])
  list([1, 0.5587390595421261])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([3]) list([0, 9]) list([0, 0.48186282377146106])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.81355932 0.81355932 0.79661017 0.79661017 0.79661017
 0.79661017 0.79661017 0.79661017 0.77966102]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 0.8305084745762712


@@@@ Selecao
indexParent 0
indexParent 2
indexParent 8
indexParent 1
indexParent 2
indexParent 2
indexParent 0
indexParent 2
indexParent 2
indexParent 5


@@@@ Crossover
not changing individuals
crossoverPoint 4
crossoverPoint 5
crossoverPoint 2
crossoverPoint 2


@@@@ Mutacao
Individuos para mutacao [7, 1]
@@@ mutated [1, 7]
@@@ mutated [1, 7]


@@@@ Calculando fitness
verifyEntry ([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=1024, bias=True)
  (3): ReLU()
  (4): Dropout(p=0.3079894785442912, inplace=False)
  (5): Linear(in_features=1024, out_features=128, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.11868005532196885, inplace=False)
  (8): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 46.67%
3977.71 total seconds elapsed. 132.59 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.655172             0.833333      0.716981
TestLoader Losses 0.479779433395903
@@@@ individuo =  6 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7457627118644068
verifyEntry ([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=128, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.11868005532196885, inplace=False)
  (9): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.71 and acc: 43.33%
4039.02 total seconds elapsed. 134.63 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.711864            0.482759             0.933333      0.622222
TestLoader Losses 0.5312543193162498
@@@@ individuo =  4 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.711864406779661
verifyEntry ([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=128, bias=True)
  (1): ReLU()
  (2): Linear(in_features=128, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.4591098062076323, inplace=False)
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 41.67%
3986.20 total seconds elapsed. 132.87 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.896552             0.766667       0.83871
TestLoader Losses 0.4539828641434847
@@@@ individuo =  7 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  5 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.4591098062076323, inplace=False)
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 9 with loss: 0.69 and acc: 41.67%
5467.49 total seconds elapsed. 109.35 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.896552             0.733333      0.825397
TestLoader Losses 0.513548334776345
@@@@ individuo =  3 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=256, bias=True)
  (4): ReLU()
  (5): Linear(in_features=256, out_features=2048, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.4591098062076323, inplace=False)
  (8): Linear(in_features=2048, out_features=128, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11868005532196885, inplace=False)
  (11): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 48.33%
5574.14 total seconds elapsed. 111.48 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.627119            0.965517                  0.3      0.717949
TestLoader Losses 0.6163301154718561
@@@@ individuo =  1 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.6271186440677966
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  2 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.4591098062076323, inplace=False)
  (7): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 42 with loss: 0.69 and acc: 50.00%
5468.69 total seconds elapsed. 109.37 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.491525                 1.0                  0.0      0.659091
TestLoader Losses 0.6932010004075907
@@@@ individuo =  9 [list([3]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.4915254237288136
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=128, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.11868005532196885, inplace=False)
  (9): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.71 and acc: 43.33%
4039.77 total seconds elapsed. 134.66 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.711864            0.482759             0.933333      0.622222
TestLoader Losses 0.5312543193162498
@@@@ individuo =  8 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.711864406779661
result (0, 0.8305084745762712)
result (1, 0.6271186440677966)
result (2, 0.8135593220338984)
result (3, 0.8135593220338984)
result (4, 0.711864406779661)
result (5, 0.8135593220338984)
result (6, 0.7457627118644068)
result (7, 0.8305084745762712)
result (8, 0.711864406779661)
result (9, 0.4915254237288136)


 Saving new generated items of geração  4

individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([1, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([3]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
 childPopulation, childrenFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.62711864 0.81355932 0.81355932 0.71186441 0.81355932
 0.74576271 0.83050847 0.71186441 0.49152542]
tp 10
allPopulation [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.83050847 0.83050847 0.62711864 0.81355932 0.81355932 0.71186441
 0.81355932 0.74576271 0.83050847 0.71186441 0.49152542]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.83050847 0.81355932 0.81355932 0.81355932
 0.74576271 0.71186441 0.71186441 0.62711864 0.49152542]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.6271186440677966, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.711864406779661, '([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8305084745762712, '([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.4915254237288136}


 $$$$$$$$ Geração  5
population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([3]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([0, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.81355932 0.81355932 0.81355932
 0.74576271 0.71186441 0.71186441 0.62711864]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712


@@@@ Selecao
indexParent 5
indexParent 5
indexParent 0
indexParent 5
indexParent 3
indexParent 0
indexParent 3
indexParent 0
indexParent 2
indexParent 5


@@@@ Crossover
crossoverPoint 9
crossoverPoint 4
not changing individuals
not changing individuals
crossoverPoint 7


@@@@ Mutacao
Individuos para mutacao [1, 8]
@@@ mutated [0, 11]
@@@ mutated [1, 0.14158855714576363]


@@@@ Calculando fitness
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  5 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  2 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  9 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 7], [1, 8])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=128, bias=True)
  (1): ReLU()
  (2): Linear(in_features=128, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 46.67%
2537.93 total seconds elapsed. 84.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763             0.62069             0.866667      0.705882
TestLoader Losses 0.47903477488938023
@@@@ individuo =  4 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7457627118644068
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  3 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=128, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.11868005532196885, inplace=False)
  (9): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
4475.94 total seconds elapsed. 89.52 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.813559            0.862069             0.766667      0.819672
TestLoader Losses 0.4343843818721125
@@@@ individuo =  7 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  0 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.14158855714576363, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=128, bias=True)
  (7): ReLU()
  (8): Dropout(p=0.11868005532196885, inplace=False)
  (9): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 46.67%
4477.03 total seconds elapsed. 89.54 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.896552             0.766667       0.83871
TestLoader Losses 0.42706052681147044
@@@@ individuo =  8 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=256, bias=True)
  (4): ReLU()
  (5): Linear(in_features=256, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 46.67%
4431.66 total seconds elapsed. 88.63 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.46387124718245815
@@@@ individuo =  1 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.7457627118644068  individuo =  6 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7457627118644068
result (0, 0.8135593220338984)
result (1, 0.8305084745762712)
result (2, 0.8135593220338984)
result (3, 0.8135593220338984)
result (4, 0.7457627118644068)
result (5, 0.8135593220338984)
result (6, 0.7457627118644068)
result (7, 0.8135593220338984)
result (8, 0.8305084745762712)
result (9, 0.8135593220338984)


 Saving new generated items of geração  5

individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 7], [1, 8]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
 childPopulation, childrenFitness [[list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]] [0.81355932 0.83050847 0.81355932 0.81355932 0.74576271 0.81355932
 0.74576271 0.81355932 0.83050847 0.81355932]
tp 10
allPopulation [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.83050847 0.81355932 0.83050847 0.81355932 0.81355932 0.74576271
 0.81355932 0.74576271 0.81355932 0.83050847 0.81355932]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.83050847 0.81355932 0.81355932 0.81355932
 0.81355932 0.81355932 0.81355932 0.74576271 0.74576271]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.6271186440677966, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.711864406779661, '([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8305084745762712, '([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.4915254237288136, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8])': 0.8305084745762712, '([4], [3], [1, 7], [1, 8])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8135593220338984, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712}


 $$$$$$$$ Geração  6
population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 7]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.81355932 0.81355932 0.81355932
 0.81355932 0.81355932 0.81355932 0.74576271]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712


@@@@ Selecao
indexParent 0
indexParent 5
indexParent 1
indexParent 3
indexParent 0
indexParent 2
indexParent 8
indexParent 3
indexParent 2
indexParent 1


@@@@ Crossover
crossoverPoint 9
crossoverPoint 8
not changing individuals
crossoverPoint 6
crossoverPoint 3


@@@@ Mutacao
Individuos para mutacao [7, 4]
@@@ mutated [1, 6]
@@@ mutated [1, 10]


@@@@ Calculando fitness
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  2 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  3 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 5], [1, 8])

achei cache 0.6949152542372882  individuo =  6 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.6949152542372882
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=256, bias=True)
  (3): ReLU()
  (4): Linear(in_features=256, out_features=2048, bias=True)
  (5): ReLU()
  (6): Dropout(p=0.4591098062076323, inplace=False)
  (7): Linear(in_features=2048, out_features=128, bias=True)
  (8): ReLU()
  (9): Dropout(p=0.11868005532196885, inplace=False)
  (10): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 43.33%
2675.57 total seconds elapsed. 89.19 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.827586                  0.7      0.774194
TestLoader Losses 0.4810639958260423
@@@@ individuo =  5 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 45.00%
4312.31 total seconds elapsed. 86.25 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.827586             0.833333      0.827586
TestLoader Losses 0.427168486482006
@@@@ individuo =  4 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=256, bias=True)
  (4): ReLU()
  (5): Linear(in_features=256, out_features=2048, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.4591098062076323, inplace=False)
  (8): Linear(in_features=2048, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
4281.26 total seconds elapsed. 85.63 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.779661            0.793103             0.766667      0.779661
TestLoader Losses 0.4441392537900957
@@@@ individuo =  1 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7796610169491526
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.14158855714576363, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=64, bias=True)
  (7): ReLU()
  (8): Linear(in_features=64, out_features=128, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11868005532196885, inplace=False)
  (11): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 46.67%
4332.26 total seconds elapsed. 86.65 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.45472836292396157
@@@@ individuo =  7 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.8135593220338984  individuo =  8 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
result (0, 0.8305084745762712)
result (1, 0.7796610169491526)
result (2, 0.8135593220338984)
result (3, 0.8135593220338984)
result (4, 0.8305084745762712)
result (5, 0.7627118644067796)
result (6, 0.6949152542372882)
result (7, 0.8305084745762712)
result (8, 0.8135593220338984)
result (9, 0.8305084745762712)


 Saving new generated items of geração  6

individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([1, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
 childPopulation, childrenFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.77966102 0.81355932 0.81355932 0.83050847 0.76271186
 0.69491525 0.83050847 0.81355932 0.83050847]
tp 10
allPopulation [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.83050847 0.83050847 0.77966102 0.81355932 0.81355932 0.83050847
 0.76271186 0.69491525 0.83050847 0.81355932 0.83050847]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.81355932
 0.81355932 0.81355932 0.77966102 0.76271186 0.69491525]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.6271186440677966, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.711864406779661, '([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8305084745762712, '([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.4915254237288136, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8])': 0.8305084745762712, '([4], [3], [1, 7], [1, 8])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8135593220338984, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.7796610169491526, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])': 0.8305084745762712, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.7627118644067796, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712}


 $$$$$$$$ Geração  7
population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.81355932
 0.81355932 0.81355932 0.77966102 0.76271186]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712


@@@@ Selecao
indexParent 4
indexParent 5
indexParent 7
indexParent 2
indexParent 3
indexParent 3
indexParent 0
indexParent 1
indexParent 2
indexParent 4


@@@@ Crossover
crossoverPoint 10
crossoverPoint 5
crossoverPoint 5
crossoverPoint 8
not changing individuals


@@@@ Mutacao
Individuos para mutacao [2, 9]
@@@ mutated [1]
@@@ mutated [1, 6]


@@@@ Calculando fitness
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  8 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])

achei cache 0.8305084745762712  individuo =  9 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.8305084745762712  individuo =  3 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])

achei cache 0.8305084745762712  individuo =  4 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  5 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([4], [3], [1, 5], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=32, bias=True)
  (1): ReLU()
  (2): Linear(in_features=32, out_features=1024, bias=True)
  (3): ReLU()
  (4): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
1908.09 total seconds elapsed. 63.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763            0.931034             0.566667      0.782609
TestLoader Losses 0.509554036087909
@@@@ individuo =  1 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7457627118644068
verifyEntry ([1], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.14158855714576363, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.3079894785442912, inplace=False)
  (6): Linear(in_features=1024, out_features=64, bias=True)
  (7): ReLU()
  (8): Linear(in_features=64, out_features=128, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11868005532196885, inplace=False)
  (11): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 16 with loss: 0.69 and acc: 50.00%
3292.04 total seconds elapsed. 65.84 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.508475                 0.0                  1.0           0.0
TestLoader Losses 0.6991958597959098
@@@@ individuo =  2 [list([1]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.5084745762711864
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])

achei cache 0.8305084745762712  individuo =  7 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323])

achei cache 0.7796610169491526  individuo =  6 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7796610169491526
result (0, 0.8305084745762712)
result (1, 0.7457627118644068)
result (2, 0.5084745762711864)
result (3, 0.8305084745762712)
result (4, 0.8305084745762712)
result (5, 0.8135593220338984)
result (6, 0.7796610169491526)
result (7, 0.8305084745762712)
result (8, 0.8135593220338984)
result (9, 0.8305084745762712)


 Saving new generated items of geração  7

individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [3], [1, 5], [1, 10]) 


individuo [list([1]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([1], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
 list([0, 0.2660215326196901]) list([1, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
 childPopulation, childrenFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([1]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.74576271 0.50847458 0.83050847 0.83050847 0.81355932
 0.77966102 0.83050847 0.81355932 0.83050847]
tp 10
allPopulation [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([1]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.83050847 0.83050847 0.74576271 0.50847458 0.83050847 0.83050847
 0.81355932 0.77966102 0.83050847 0.81355932 0.83050847]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([1]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.81355932 0.81355932 0.77966102 0.74576271 0.50847458]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.6271186440677966, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.711864406779661, '([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8305084745762712, '([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.4915254237288136, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8])': 0.8305084745762712, '([4], [3], [1, 7], [1, 8])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8135593220338984, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.7796610169491526, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])': 0.8305084745762712, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.7627118644067796, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([4], [3], [1, 5], [1, 10])': 0.7457627118644068, '([1], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.5084745762711864}


 $$$$$$$$ Geração  8
population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 8])
  list([0, 0.2660215326196901]) list([1, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([3]) list([1, 5]) list([0, 0.2606701324107779])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.81355932 0.81355932 0.77966102 0.74576271]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712


@@@@ Selecao
indexParent 0
indexParent 4
indexParent 1
indexParent 3
indexParent 1
indexParent 2
indexParent 4
indexParent 7
indexParent 0
indexParent 3


@@@@ Crossover
not changing individuals
crossoverPoint 5
not changing individuals
crossoverPoint 7
crossoverPoint 1


@@@@ Mutacao
Individuos para mutacao [3, 2]
@@@ mutated [1, 0.24269850048129524]
@@@ mutated [0, 0.3079894785442912]


@@@@ Calculando fitness
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])

achei cache 0.8305084745762712  individuo =  4 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  0 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  8 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  9 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])

achei cache 0.8305084745762712  individuo =  5 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.14158855714576363, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Linear(in_features=1024, out_features=128, bias=True)
  (6): ReLU()
  (7): Dropout(p=0.11868005532196885, inplace=False)
  (8): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 45.00%
6130.93 total seconds elapsed. 122.62 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.745763             0.62069             0.866667      0.705882
TestLoader Losses 0.48934934856527945
@@@@ individuo =  2 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([0, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7457627118644068
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.5002292586634226], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.14158855714576363, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.5002292586634226, inplace=False)
  (6): Linear(in_features=1024, out_features=1024, bias=True)
  (7): ReLU()
  (8): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.70 and acc: 45.00%
6172.02 total seconds elapsed. 123.44 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.762712            0.655172             0.866667      0.730769
TestLoader Losses 0.4953042940568116
@@@@ individuo =  1 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7627118644067796
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.14158855714576363, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.24269850048129524, inplace=False)
  (6): Linear(in_features=1024, out_features=64, bias=True)
  (7): ReLU()
  (8): Linear(in_features=64, out_features=128, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11868005532196885, inplace=False)
  (11): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.69 and acc: 46.67%
6190.05 total seconds elapsed. 123.80 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.45928811218778964
@@@@ individuo =  3 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.8305084745762712  individuo =  7 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=128, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.11868005532196885, inplace=False)
  (6): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.70 and acc: 46.67%
5994.18 total seconds elapsed. 119.88 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.896552                  0.7        0.8125
TestLoader Losses 0.473878702874911
@@@@ individuo =  6 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
result (0, 0.8135593220338984)
result (1, 0.7627118644067796)
result (2, 0.7457627118644068)
result (3, 0.8305084745762712)
result (4, 0.8305084745762712)
result (5, 0.8305084745762712)
result (6, 0.7966101694915254)
result (7, 0.8305084745762712)
result (8, 0.8135593220338984)
result (9, 0.8135593220338984)


 Saving new generated items of geração  8

individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.5002292586634226], [1, 10]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([0, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
 childPopulation, childrenFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([0, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.81355932 0.76271186 0.74576271 0.83050847 0.83050847 0.83050847
 0.79661017 0.83050847 0.81355932 0.81355932]
tp 10
allPopulation [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([0, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.83050847 0.81355932 0.76271186 0.74576271 0.83050847 0.83050847
 0.83050847 0.79661017 0.83050847 0.81355932 0.81355932]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([0, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.81355932
 0.81355932 0.81355932 0.79661017 0.76271186 0.74576271]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.6271186440677966, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.711864406779661, '([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8305084745762712, '([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.4915254237288136, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8])': 0.8305084745762712, '([4], [3], [1, 7], [1, 8])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8135593220338984, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.7796610169491526, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])': 0.8305084745762712, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.7627118644067796, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([4], [3], [1, 5], [1, 10])': 0.7457627118644068, '([1], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.5084745762711864, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.5002292586634226], [1, 10])': 0.7627118644067796, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885])': 0.7966101694915254}


 $$$$$$$$ Geração  9
population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.81355932
 0.81355932 0.81355932 0.79661017 0.76271186]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712


@@@@ Selecao
indexParent 6
indexParent 2
indexParent 2
indexParent 4
indexParent 5
indexParent 2
indexParent 5
indexParent 1
indexParent 8
indexParent 5


@@@@ Crossover
crossoverPoint 1
crossoverPoint 4
crossoverPoint 5
crossoverPoint 4
crossoverPoint 2


@@@@ Mutacao
Individuos para mutacao [4, 6]
@@@ mutated [1, 0.11771155988814913]
@@@ mutated [4]


@@@@ Calculando fitness
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885])

achei cache 0.7966101694915254  individuo =  7 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([1, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  4 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([1, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])

achei cache 0.8305084745762712  individuo =  1 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8305084745762712  individuo =  8 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([1, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.5002292586634226], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.5002292586634226, inplace=False)
  (6): Linear(in_features=1024, out_features=1024, bias=True)
  (7): ReLU()
  (8): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 0 with loss: 0.69 and acc: 45.00%
10616.45 total seconds elapsed. 212.33 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0   0.79661            0.724138             0.866667      0.777778
TestLoader Losses 0.4745307170738608
@@@@ individuo =  2 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Dropout(p=0.24269850048129524, inplace=False)
  (6): Linear(in_features=1024, out_features=64, bias=True)
  (7): ReLU()
  (8): Linear(in_features=64, out_features=128, bias=True)
  (9): ReLU()
  (10): Dropout(p=0.11868005532196885, inplace=False)
  (11): Linear(in_features=128, out_features=2, bias=True)
)

Best epoch: 2 with loss: 0.69 and acc: 45.00%
10647.22 total seconds elapsed. 212.94 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.46103973105802376
@@@@ individuo =  3 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([4], [5], [1, 12], [1, 0.5116230484311894], [1, 10])
custom fc Sequential(
  (0): Linear(in_features=2048, out_features=4096, bias=True)
  (1): ReLU()
  (2): Dropout(p=0.5116230484311894, inplace=False)
  (3): Linear(in_features=4096, out_features=1024, bias=True)
  (4): ReLU()
  (5): Linear(in_features=1024, out_features=2, bias=True)
)

Best epoch: 1 with loss: 0.78 and acc: 45.00%
10679.81 total seconds elapsed. 213.60 seconds per epoch.

Testing result
    test_acc  test_sensitividade  test_especificidade  test_f1Score
0  0.830508            0.793103             0.866667      0.821429
TestLoader Losses 0.44536575776035503
@@@@ individuo =  6 [list([4]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])

achei cache 0.8305084745762712  individuo =  0 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8305084745762712
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])

achei cache 0.8135593220338984  individuo =  5 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.8135593220338984
verifyEntry ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885])

achei cache 0.7966101694915254  individuo =  9 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 
 fitness =  0.7966101694915254
result (0, 0.8305084745762712)
result (1, 0.8305084745762712)
result (2, 0.7966101694915254)
result (3, 0.8305084745762712)
result (4, 0.8135593220338984)
result (5, 0.8135593220338984)
result (6, 0.8305084745762712)
result (7, 0.7966101694915254)
result (8, 0.8305084745762712)
result (9, 0.7966101694915254)


 Saving new generated items of geração  9

individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.5002292586634226], [1, 10]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([1, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([4]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
 list([0, 0.2660215326196901]) list([0, 11]) list([1, 0.4591098062076323])
 list([0, 7]) list([1, 0.11868005532196885])]  key  ([4], [5], [1, 12], [1, 0.5116230484311894], [1, 10]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([1, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([1, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885]) 


individuo [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])]  key  ([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885]) 



@@@@ Reinsercao
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
 childPopulation, childrenFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.79661017 0.83050847 0.81355932 0.81355932
 0.83050847 0.79661017 0.83050847 0.79661017]
tp 10
allPopulation [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
allFitness [0.83050847 0.83050847 0.83050847 0.79661017 0.83050847 0.81355932
 0.81355932 0.83050847 0.79661017 0.83050847 0.79661017]
sortedPopulation, sortedFitness [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]] [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.81355932 0.81355932 0.79661017 0.79661017 0.79661017]

cacheStore =  {'([1], [2], [1, 10], [1, 12])': 0.4915254237288136, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.7966101694915254, '([5], [2], [1, 10], [1, 9])': 0.7627118644067796, '([6], [4])': 0.4406779661016949, '([5], [3], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.7288135593220338, '([5], [5], [1, 10], [1, 0.11905579645782233])': 0.7457627118644068, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([4], [3], [1, 11], [1, 3], [1, 0.20299273484602326])': 0.5084745762711864, '([6], [3], [1, 3], [1, 0.3136017038996565], [1, 11], [1, 4], [1, 0.2926349405641228])': 0.5084745762711864, '([3], [4], [1, 3], [1, 0.5335954798523798], [1, 10], [1, 0.2096445574084042], [1, 12])': 0.4915254237288136, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([5], [3], [1, 10], [1, 0.3079894785442912])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7457627118644068, '([4], [3], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 0.4975143636486923], [1, 12])': 0.5084745762711864, '([4], [3], [1, 5])': 0.7796610169491526, '([5], [3], [1, 5], [1, 0.5587390595421261])': 0.6440677966101694, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([5], [3], [1, 10], [1, 8], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([4], [3], [1, 5], [1, 12], [1, 8], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.7966101694915254, '([4], [3], [1, 5], [1, 8])': 0.6949152542372882, '([3], [5], [1, 6], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 11], [1, 10], [1, 0.11905579645782233])': 0.4915254237288136, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([5], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7796610169491526, '([4], [3], [1, 5], [1, 12], [1, 8])': 0.7796610169491526, '([4], [3], [1, 5], [1, 5], [1, 0.5587390595421261])': 0.7627118644067796, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.4915254237288136, '([3], [3], [1, 10], [1, 11], [1, 5], [1, 0.5587390595421261])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912])': 0.8305084745762712, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 6])': 0.7966101694915254, '([3], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.6271186440677966, '([5], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8135593220338984, '([4], [3], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.711864406779661, '([4], [3], [1, 5], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([4], [3], [1, 7], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.8305084745762712, '([3], [5], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.4915254237288136, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8])': 0.8305084745762712, '([4], [3], [1, 7], [1, 8])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8135593220338984, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 8], [1, 11], [1, 0.4591098062076323])': 0.7796610169491526, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10])': 0.8305084745762712, '([4], [3], [1, 5], [1, 8], [1, 11], [1, 0.4591098062076323], [1, 7], [1, 0.11868005532196885])': 0.7627118644067796, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([4], [3], [1, 5], [1, 10])': 0.7457627118644068, '([1], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.3079894785442912], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.5084745762711864, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.5002292586634226], [1, 10])': 0.7627118644067796, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 7], [1, 0.11868005532196885])': 0.7457627118644068, '([5], [5], [1, 12], [1, 0.14158855714576363], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 7], [1, 0.11868005532196885])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.5002292586634226], [1, 10])': 0.7966101694915254, '([5], [5], [1, 12], [1, 0.5116230484311894], [1, 10], [1, 0.24269850048129524], [1, 6], [1, 7], [1, 0.11868005532196885])': 0.8305084745762712, '([4], [5], [1, 12], [1, 0.5116230484311894], [1, 10])': 0.8305084745762712}

Final population

population =  [[list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.24269850048129524]) list([1, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([4]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.14158855714576363])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
  list([0, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([1, 10]) list([1, 0.5002292586634226]) list([1, 10])
  list([0, 0.2660215326196901]) list([0, 11])
  list([1, 0.4591098062076323]) list([0, 7])
  list([1, 0.11868005532196885])]
 [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
  list([0, 12]) list([1, 0.3079894785442912]) list([0, 6])
  list([1, 0.11771155988814913]) list([0, 10])
  list([1, 0.4591098062076323]) list([1, 7])
  list([1, 0.11868005532196885])]]
populationFitness =  [0.83050847 0.83050847 0.83050847 0.83050847 0.83050847 0.83050847
 0.81355932 0.81355932 0.79661017 0.79661017]
bestParent, bestParentFitness [list([5]) list([5]) list([1, 12]) list([1, 0.5116230484311894])
 list([1, 10]) list([1, 0.3079894785442912]) list([0, 6])
 list([0, 0.11771155988814913]) list([0, 10])
 list([1, 0.4591098062076323]) list([1, 7]) list([1, 0.11868005532196885])] 0.8305084745762712
