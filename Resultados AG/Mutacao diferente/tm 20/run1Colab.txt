tp, tour, tr, numberIterations, tm, isNumpy 10 2 80 10 20 True
isNumpy True
Load dataset
Lidando com numpy data
shuffleSeed 1
n_epochs 30 max_epochs_stop 10
device =  cuda:0

PrepareDataFromNumpy arrays
getFilesName
/content/gdrive/My Drive/MestradoCodes/Imagens_numpy_array_allData_entireDatabase_MinMax_extrapolandoLimites
readFilesByPatient saudaveis
readFilesByPatient doentes

Split Healthy Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0189', 'T0196', 'T0193', 'T0220', 'T0199', 'T0217', 'T0188', 'T0224', 'T0216', 'T0211', 'T0259', 'T0194', 'T0200', 'T0239', 'T0236', 'T0272', 'T0201', 'T0226', 'T0195', 'T0221', 'T0238', 'T0237', 'T0234', 'T0275', 'T0222', 'T0261']
validationPatients ['T0243', 'T0276', 'T0191', 'T0219', 'T0244', 'T0212']
testPatients ['T0218', 'T0233', 'T0208', 'T0190', 'T0225', 'T0177']
imagens do trainDataset 128
imagens do testDataset 30
imagens do validationDataset 30
train (128, 3, 224, 224)
test (30, 3, 224, 224)
validation (30, 3, 224, 224)

Split Cancer Dataset
Total dados 38
Quantidade de dados para treinamento 26
Quantidade de dados para teste 6
Quantidade de dados para validacao 6
trainPatients ['T0267', 'T0255', 'T0138', 'T0286', 'T0198', 'T0246', 'T0192', 'T0258', 'T0202', 'T0209', 'T0241', 'T0179', 'T0287', 'T0213', 'T0203', 'T0210', 'T0240', 'T0270', 'T0180', 'T0264', 'T0269', 'T0282', 'T0281', 'T0277', 'T0273', 'T0256']
validationPatients ['T0266', 'T0245', 'T0263', 'T0260', 'T0181', 'T0204']
testPatients ['T0257', 'T0278', 'T0285', 'T0268', 'T0283', 'T0271']
imagens do trainDataset 129
imagens do testDataset 29
imagens do validationDataset 30
train (129, 3, 224, 224)
test (29, 3, 224, 224)
validation (30, 3, 224, 224)

Total de dados para treinamento 257

Total de dados para teste 59

Total de dados para validacao 60
prepareNumpyDatasetBalancedData
Sem aumento de dados
com testValidationTransform Compose(
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
   category  Treinamento  Validação  Teste
0  Saudável          128         30     30
1    Doente          129         30     29


@@@@ Init pop


@@@@ Calculando fitness
after error
key  ([5], [5], [1, 5], [1, 6]) 

key  ([3], [1], [1, 10], [1, 0.018910556165549996], [1, 10], [1, 0.22835590058189012]) 

key  ([5], [6], [1, 12], [1, 0.4151302209153666], [1, 6]) 

key  ([2], [1], [1, 4], [1, 3], [1, 0.2177334148029726]) 

key  ([6], [4], [1, 12], [1, 0.39685296397848335], [1, 3], [1, 0.06026314223039857], [1, 8], [1, 0.47104993759645], [1, 6], [1, 0.346103327713206]) 

key  ([1], [5], [1, 10], [1, 11], [1, 0.1045594048894597]) 

key  ([4], [5], [1, 10], [1, 8], [1, 0.058301176916880054], [1, 10], [1, 5]) 

key  ([5], [3], [1, 9], [1, 7], [1, 0.27074083997435744], [1, 10], [1, 0.33016410234096305]) 

key  ([1], [5], [1, 5], [1, 0.11513604453890977], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([5], [2], [1, 11], [1, 8], [1, 0.08347907698216762]) 



 $$$$$$$$ Geração  0
population =  [[list([5]) list([5]) list([0, 12]) list([0, 0.04235914430316914])
  list([1, 5]) list([0, 0.25765565893437037]) list([1, 6])
  list([0, 0.2512588737745231]) list([0, 6])
  list([1, 0.12055428750023482]) list([0, 4])
  list([1, 0.050451815302512214])]
 [list([3]) list([1]) list([0, 3]) list([0, 0.192871370547973])
  list([1, 10]) list([1, 0.018910556165549996]) list([0, 6])
  list([1, 0.19174059988748882]) list([1, 10])
  list([1, 0.22835590058189012]) list([0, 3])
  list([0, 0.29634868949440524])]
 [list([5]) list([6]) list([1, 12]) list([1, 0.4151302209153666])
  list([0, 6]) list([1, 0.23624254980667028]) list([0, 10])
  list([0, 0.11907357322478233]) list([0, 8])
  list([0, 0.45010107381621317]) list([1, 6])
  list([0, 0.39231037640288885])]
 [list([2]) list([1]) list([1, 4]) list([0, 0.5491685535354004])
  list([0, 9]) list([0, 0.5314384419347679]) list([0, 10])
  list([1, 0.4702133012842705]) list([0, 4])
  list([0, 0.12746303695597863]) list([1, 3])
  list([1, 0.2177334148029726])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.42919424494358854])
  list([1, 12]) list([1, 0.39685296397848335]) list([1, 3])
  list([1, 0.06026314223039857]) list([1, 8]) list([1, 0.47104993759645])
  list([1, 6]) list([1, 0.346103327713206])]
 [list([1]) list([5]) list([0, 3]) list([0, 0.10511659878238533])
  list([0, 5]) list([0, 0.3292936496181323]) list([1, 10])
  list([0, 0.3151991472805913]) list([0, 12])
  list([1, 0.024982271490496276]) list([1, 11])
  list([1, 0.1045594048894597])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([3]) list([0, 3]) list([0, 0.038232379191490605])
  list([1, 9]) list([0, 0.33026601820621]) list([1, 7])
  list([1, 0.27074083997435744]) list([1, 10])
  list([1, 0.33016410234096305]) list([0, 6])
  list([0, 0.3181905556798231])]
 [list([1]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 12])
  list([1, 0.40772728494465615])]
 [list([5]) list([2]) list([1, 11]) list([0, 0.3336620208274019])
  list([1, 8]) list([1, 0.08347907698216762]) list([0, 3])
  list([0, 0.29095483060189675]) list([0, 7])
  list([0, 0.3970548073638313]) list([0, 9])
  list([0, 0.5369883892212006])]]
populationFitness =  [0.72881356 0.77966102 0.71186441 0.49152542 0.50847458 0.49152542
 0.74576271 0.76271186 0.50847458 0.77966102]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([5]) list([2]) list([1, 11]) list([0, 0.3336620208274019])
 list([1, 8]) list([1, 0.08347907698216762]) list([0, 3])
 list([0, 0.29095483060189675]) list([0, 7]) list([0, 0.3970548073638313])
 list([0, 9]) list([0, 0.5369883892212006])] 0.7796610169491526


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [1, 7]
Individuos para mutacao presente [8, 7]
@@@ original [0, 4] geneIndex 10
@@@ mutated [0, 6]
@@@ original [0, 12] geneIndex 10
@@@ mutated [0, 10]
@@@ original [1, 0.39685296397848335] geneIndex 5
@@@ mutated [0, 0.39685296397848335]
@@@ original [1, 5] geneIndex 2
@@@ mutated [0, 5]


@@@@ Calculando fitness
error
after error
key  ([1], [4], [1, 12], [1, 0.39685296397848335], [1, 3], [1, 0.06026314223039857], [1, 8], [1, 0.47104993759645], [1, 6], [1, 0.346103327713206]) 

key  ([4], [5], [1, 10], [1, 8], [1, 0.058301176916880054]) 

key  ([1], [5], [1, 10], [1, 8], [1, 0.058301176916880054], [1, 10], [1, 5]) 

key  ([5], [5], [1, 5], [1, 6]) 

key  ([3], [1], [1, 10], [1, 0.018910556165549996], [1, 10], [1, 0.22835590058189012]) 

key  ([6], [5], [1, 10], [1, 11], [1, 0.1045594048894597]) 

key  ([5], [5], [1, 5], [1, 6], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([6], [4], [1, 12], [1, 3], [1, 0.06026314223039857], [1, 8], [1, 0.47104993759645], [1, 6], [1, 0.346103327713206]) 

key  ([4], [5], [1, 10], [1, 8], [1, 0.058301176916880054], [1, 10], [1, 5]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  1
population =  [[list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([0, 6])
  list([1, 0.12055428750023482]) list([0, 6])
  list([1, 0.050451815302512214])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([2]) list([1, 11]) list([0, 0.3336620208274019])
  list([1, 8]) list([1, 0.08347907698216762]) list([0, 3])
  list([0, 0.29095483060189675]) list([0, 7])
  list([0, 0.3970548073638313]) list([0, 9])
  list([0, 0.5369883892212006])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 12]) list([0, 0.04235914430316914])
  list([1, 5]) list([0, 0.25765565893437037]) list([1, 6])
  list([0, 0.2512588737745231]) list([0, 6])
  list([1, 0.12055428750023482]) list([0, 4])
  list([1, 0.050451815302512214])]
 [list([6]) list([5]) list([0, 3]) list([0, 0.10511659878238533])
  list([0, 5]) list([0, 0.3292936496181323]) list([1, 10])
  list([0, 0.3151991472805913]) list([0, 12])
  list([1, 0.024982271490496276]) list([1, 11])
  list([1, 0.1045594048894597])]
 [list([5]) list([5]) list([0, 12]) list([0, 0.04235914430316914])
  list([1, 5]) list([0, 0.25765565893437037]) list([1, 6])
  list([0, 0.2512588737745231]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([3]) list([1]) list([0, 3]) list([0, 0.192871370547973])
  list([1, 10]) list([1, 0.018910556165549996]) list([0, 6])
  list([1, 0.19174059988748882]) list([1, 10])
  list([1, 0.22835590058189012]) list([0, 3])
  list([0, 0.29634868949440524])]
 [list([6]) list([4]) list([0, 11]) list([0, 0.42919424494358854])
  list([1, 12]) list([0, 0.39685296397848335]) list([1, 3])
  list([1, 0.06026314223039857]) list([1, 8]) list([1, 0.47104993759645])
  list([1, 6]) list([1, 0.346103327713206])]
 [list([1]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]]
populationFitness =  [0.81355932 0.81355932 0.77966102 0.77966102 0.72881356 0.72881356
 0.69491525 0.66101695 0.59322034 0.50847458]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
 list([0, 0.17107755627413782]) list([1, 5]) list([0, 0.3904877466416578])
 list([0, 10]) list([1, 0.40772728494465615])] 0.8135593220338984


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [5, 9]
Individuos para mutacao presente [4, 7]
@@@ original [1, 8] geneIndex 6
@@@ mutated [1, 6]
@@@ original [0, 0.17107755627413782] geneIndex 7
@@@ mutated [0, 0.5446099494387489]
@@@ original [1, 6] geneIndex 6
@@@ mutated [0, 6]
@@@ original [0, 0.5369883892212006] geneIndex 11
@@@ mutated [1, 0.5369883892212006]


@@@@ Calculando fitness
error
after error
key  ([4], [5], [1, 10], [1, 8], [1, 0.058301176916880054]) 

key  ([4], [5], [1, 10], [1, 8], [1, 0.058301176916880054], [1, 10], [1, 5]) 

key  ([5], [2], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 10], [1, 8], [1, 5]) 

key  ([5], [5], [1, 5], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 6], [1, 0.058301176916880054]) 

key  ([5], [2], [1, 11], [1, 8], [1, 0.08347907698216762]) 

key  ([4], [5], [1, 11], [1, 8], [1, 0.08347907698216762]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  2
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.5446099494387489]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([0, 6])
  list([1, 0.12055428750023482]) list([0, 6])
  list([1, 0.050451815302512214])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([2]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([2]) list([1, 11]) list([0, 0.3336620208274019])
  list([1, 8]) list([1, 0.08347907698216762]) list([0, 3])
  list([0, 0.29095483060189675]) list([0, 7])
  list([0, 0.3970548073638313]) list([0, 9])
  list([0, 0.5369883892212006])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 12]) list([0, 0.04235914430316914])
  list([1, 5]) list([0, 0.25765565893437037]) list([0, 6])
  list([0, 0.2512588737745231]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 6])
  list([1, 0.058301176916880054]) list([0, 6])
  list([1, 0.12055428750023482]) list([0, 6])
  list([1, 0.050451815302512214])]]
populationFitness =  [0.81355932 0.81355932 0.81355932 0.79661017 0.79661017 0.79661017
 0.79661017 0.79661017 0.77966102 0.77966102]

multiplos individiduos com maxValue =  3
bestParent, bestParentFitness [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
 list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
 list([0, 0.17107755627413782]) list([1, 5]) list([0, 0.3904877466416578])
 list([0, 10]) list([1, 0.40772728494465615])] 0.8135593220338984


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [8, 1]
Individuos para mutacao presente [3, 9]
@@@ original [1, 10] geneIndex 4
@@@ mutated [1, 11]
@@@ original [0, 11] geneIndex 2
@@@ mutated [0, 8]
@@@ original [0, 0.5446099494387489] geneIndex 7
@@@ mutated [1, 0.5446099494387489]
@@@ original [1, 0.11513604453890977] geneIndex 3
@@@ mutated [0, 0.11513604453890977]


@@@@ Calculando fitness
error
after error
key  ([4], [5], [1, 10], [1, 8], [1, 0.5446099494387489], [1, 5]) 

key  ([4], [5], [1, 10], [1, 8], [1, 0.058301176916880054], [1, 10]) 

key  ([5], [2], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 5]) 

key  ([5], [2], [1, 11], [1, 8], [1, 0.08347907698216762]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([5], [2], [1, 10], [1, 0.02077699029820206], [1, 5]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  3
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 8]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([2]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([2]) list([1, 11]) list([0, 0.3336620208274019])
  list([1, 8]) list([1, 0.08347907698216762]) list([0, 3])
  list([0, 0.29095483060189675]) list([0, 7])
  list([0, 0.3970548073638313]) list([0, 9])
  list([0, 0.5369883892212006])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]]
populationFitness =  [0.84745763 0.81355932 0.81355932 0.77966102 0.77966102 0.77966102
 0.76271186 0.76271186 0.76271186 0.74576271]
bestParent, bestParentFitness [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
 list([0, 0.17107755627413782]) list([1, 5]) list([0, 0.3904877466416578])
 list([0, 10]) list([1, 0.40772728494465615])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [2, 5]
Individuos para mutacao presente [6, 4]
@@@ original [0, 0.3904877466416578] geneIndex 9
@@@ mutated [0, 0.5847645853831623]
@@@ original [1, 0.11513604453890977] geneIndex 3
@@@ mutated [1, 0.020799388084388526]
@@@ original [1, 0.40772728494465615] geneIndex 11
@@@ mutated [0, 0.40772728494465615]
@@@ original [1, 5] geneIndex 8
@@@ mutated [0, 5]


@@@@ Calculando fitness
error
after error
key  ([4], [5], [1, 10], [1, 8], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 8], [1, 0.5446099494387489], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 5]) 

key  ([5], [2], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 10], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  4
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([2]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([0, 5])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.020799388084388526])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([0, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 8])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([0, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([0, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 11]) list([0, 0.36159713780203717])
  list([1, 10]) list([0, 0.2957925956966157]) list([1, 8])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]]
populationFitness =  [0.84745763 0.84745763 0.83050847 0.79661017 0.79661017 0.79661017
 0.77966102 0.76271186 0.76271186 0.72881356]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
 list([0, 0.17107755627413782]) list([1, 5]) list([0, 0.3904877466416578])
 list([0, 10]) list([1, 0.40772728494465615])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [5, 4]
Individuos para mutacao presente [4, 6]
@@@ original [1, 0.058301176916880054] geneIndex 7
@@@ mutated [1, 0.5078974178414769]
@@@ original [0, 0.20038725275844252] geneIndex 9
@@@ mutated [0, 0.042040996621782664]
@@@ original [0, 5] geneIndex 8
@@@ mutated [1, 5]
@@@ original [0, 10] geneIndex 10
@@@ mutated [1, 10]


@@@@ Calculando fitness
error
after error
key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [2], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([5], [2], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  5
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([0, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 5])
  list([0, 0.042040996621782664]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([2]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]]
populationFitness =  [0.84745763 0.84745763 0.84745763 0.83050847 0.81355932 0.81355932
 0.79661017 0.76271186 0.76271186 0.74576271]

multiplos individiduos com maxValue =  3
bestParent, bestParentFitness [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
 list([1, 0.5446099494387489]) list([1, 5]) list([0, 0.5847645853831623])
 list([0, 10]) list([0, 0.40772728494465615])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [8, 2]
Individuos para mutacao presente [8, 9]
@@@ original [5] geneIndex 1
@@@ mutated [1]
@@@ original [5] geneIndex 1
@@@ mutated [5]
@@@ original [0, 0.40772728494465615] geneIndex 11
@@@ mutated [1, 0.40772728494465615]
@@@ original [1, 0.02077699029820206] geneIndex 5
@@@ mutated [0, 0.02077699029820206]


@@@@ Calculando fitness
error
after error
key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 5]) 

key  ([4], [1], [1, 10], [1, 0.02077699029820206], [1, 5]) 

key  ([4], [5], [1, 11], [1, 5], [1, 10], [1, 0.40772728494465615]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  6
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([0, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([0, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.058301176916880054]) list([1, 5])
  list([0, 0.042040996621782664]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([1]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]]
populationFitness =  [0.84745763 0.84745763 0.81355932 0.81355932 0.81355932 0.81355932
 0.79661017 0.77966102 0.76271186 0.74576271]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
 list([1, 0.5446099494387489]) list([1, 5]) list([0, 0.5847645853831623])
 list([0, 10]) list([1, 0.40772728494465615])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [9, 3]
Individuos para mutacao presente [7, 2]
@@@ original [0, 0.17107755627413782] geneIndex 7
@@@ mutated [0, 0.1462132697182968]
@@@ original [1, 10] geneIndex 8
@@@ mutated [1, 6]
@@@ original [0, 11] geneIndex 6
@@@ mutated [1, 11]
@@@ original [0, 0.20038725275844252] geneIndex 9
@@@ mutated [1, 0.20038725275844252]


@@@@ Calculando fitness
error
after error
key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([4], [5], [1, 11], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 

key  ([5], [5], [1, 10], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 10], [1, 0.02077699029820206], [1, 11], [1, 0.5446099494387489], [1, 5]) 

key  ([5], [5], [1, 11], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 5]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  7
population =  [[list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([0, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.5847645853831623]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 6])
  list([1, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([0, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 6])
  list([1, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]]
populationFitness =  [0.84745763 0.84745763 0.83050847 0.83050847 0.81355932 0.77966102
 0.77966102 0.76271186 0.74576271 0.72881356]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
 list([0, 0.1462132697182968]) list([1, 10])
 list([0, 0.20038725275844252]) list([1, 5])
 list([0, 0.16496989322173405])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [6, 5]
Individuos para mutacao presente [3, 4]
@@@ original [1, 11] geneIndex 6
@@@ mutated [1, 12]
@@@ original [1, 5] geneIndex 10
@@@ mutated [1, 6]
@@@ original [0, 5] geneIndex 2
@@@ mutated [1, 5]
@@@ original [0, 0.5847645853831623] geneIndex 9
@@@ mutated [1, 0.5847645853831623]


@@@@ Calculando fitness
error
after error
key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.5847645853831623]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.5847645853831623]) 

key  ([4], [5], [1, 11], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 5], [1, 0.11513604453890977], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 0.5847645853831623]) 

key  ([5], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 6]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.5847645853831623]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 6]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 11], [1, 0.5446099494387489], [1, 5], [1, 10], [1, 0.40772728494465615]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  8
population =  [[list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 6])
  list([1, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 12])
  list([1, 0.5446099494387489]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([1, 12])
  list([1, 0.5446099494387489]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([0, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]]
populationFitness =  [0.84745763 0.84745763 0.83050847 0.81355932 0.81355932 0.81355932
 0.79661017 0.79661017 0.79661017 0.74576271]

multiplos individiduos com maxValue =  2
bestParent, bestParentFitness [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
 list([0, 0.1462132697182968]) list([1, 10])
 list([0, 0.20038725275844252]) list([1, 6])
 list([0, 0.16496989322173405])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [7, 1]
Individuos para mutacao presente [0, 8]
@@@ original [1, 0.5446099494387489] geneIndex 7
@@@ mutated [1, 0.5793795394120568]
@@@ original [0, 5] geneIndex 2
@@@ mutated [0, 9]
@@@ original [1, 0.40772728494465615] geneIndex 11
@@@ mutated [0, 0.40772728494465615]
@@@ original [0, 5] geneIndex 2
@@@ mutated [1, 5]


@@@@ Calculando fitness
error
after error
key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.5847645853831623]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 6], [1, 0.5847645853831623]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.5847645853831623]) 

key  ([4], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 6]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 6]) 

key  ([5], [5], [1, 5], [1, 0.11513604453890977], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 10], [1, 0.40772728494465615]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.20038725275844252], [1, 5]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 12], [1, 0.5793795394120568], [1, 5], [1, 0.5847645853831623]) 

key  ([5], [5], [1, 5], [1, 0.11513604453890977], [1, 10], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([5], [5], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 6]) 



@@@@ Reinsercao


 $$$$$$$$ Geração  9
population =  [[list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 12])
  list([1, 0.5446099494387489]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([1, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([1, 12])
  list([1, 0.5793795394120568]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 6])
  list([1, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 9]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.17107755627413782]) list([1, 6])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 12])
  list([1, 0.5446099494387489]) list([1, 5])
  list([1, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]]
populationFitness =  [0.84745763 0.83050847 0.81355932 0.81355932 0.79661017 0.79661017
 0.79661017 0.77966102 0.76271186 0.76271186]
bestParent, bestParentFitness [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
 list([0, 0.1462132697182968]) list([1, 10])
 list([0, 0.20038725275844252]) list([1, 6])
 list([0, 0.16496989322173405])] 0.847457627118644


@@@@ Selecao


@@@@ Crossover 1 ponto


@@@@ Mutacao @@@@@
Individuos para mutacao valor [7, 9]
Individuos para mutacao presente [1, 2]
@@@ original [5] geneIndex 1
@@@ mutated [1]
@@@ original [0, 11] geneIndex 6
@@@ mutated [0, 8]
@@@ original [1, 10] geneIndex 8
@@@ mutated [0, 10]
@@@ original [1, 5] geneIndex 8
@@@ mutated [0, 5]


@@@@ Calculando fitness
error
after error
key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 6]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 6]) 

key  ([5], [5], [1, 5], [1, 0.11513604453890977], [1, 10], [1, 0.02077699029820206], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 5], [1, 0.11513604453890977], [1, 10], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([5], [5], [1, 5], [1, 0.11513604453890977], [1, 11], [1, 0.02077699029820206], [1, 10], [1, 0.40772728494465615]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 6]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 5], [1, 0.5847645853831623]) 

key  ([5], [1], [1, 5], [1, 0.11513604453890977], [1, 11], [1, 0.02077699029820206], [1, 6], [1, 0.20038725275844252], [1, 5]) 

key  ([4], [5], [1, 10], [1, 0.02077699029820206], [1, 12], [1, 0.5446099494387489], [1, 5], [1, 0.5847645853831623]) 

key  ([5], [5], [1, 11], [1, 0.02077699029820206], [1, 6]) 



@@@@ Reinsercao

Final population

population =  [[list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 8])
  list([0, 0.1462132697182968]) list([0, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 8])
  list([0, 0.1462132697182968]) list([0, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5446099494387489]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 8])
  list([0, 0.1462132697182968]) list([0, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 8])
  list([0, 0.1462132697182968]) list([0, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 12])
  list([0, 0.1462132697182968]) list([0, 10])
  list([0, 0.20038725275844252]) list([1, 6])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([0, 0.1462132697182968]) list([1, 6])
  list([1, 0.20038725275844252]) list([1, 5])
  list([0, 0.16496989322173405])]
 [list([5]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 11]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([0, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]
 [list([4]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([1, 12])
  list([1, 0.5446099494387489]) list([1, 5])
  list([1, 0.5847645853831623]) list([0, 10])
  list([1, 0.40772728494465615])]
 [list([5]) list([5]) list([1, 5]) list([1, 0.11513604453890977])
  list([1, 10]) list([1, 0.02077699029820206]) list([0, 11])
  list([1, 0.5078974178414769]) list([0, 5])
  list([0, 0.3904877466416578]) list([1, 10])
  list([1, 0.40772728494465615])]]
populationFitness =  [0.84745763 0.81355932 0.81355932 0.81355932 0.79661017 0.79661017
 0.76271186 0.76271186 0.76271186 0.72881356]
bestParent, bestParentFitness [list([5]) list([5]) list([0, 5]) list([1, 0.11513604453890977])
 list([1, 11]) list([1, 0.02077699029820206]) list([0, 8])
 list([0, 0.1462132697182968]) list([0, 10])
 list([0, 0.20038725275844252]) list([1, 6])
 list([0, 0.16496989322173405])] 0.847457627118644
timeAll =  6580.695108082